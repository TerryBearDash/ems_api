{"version":3,"sources":["webpack:///./src/app/list/list.module.ts","webpack:///./src/app/list/list.page.html","webpack:///./src/app/list/list.page.scss","webpack:///./src/app/list/list.page.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/swagger.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACA;AACE;AAER;AAgBvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACtB3B,83BAA83B,eAAe,+EAA+E,qFAAqF,6IAA6I,UAAU,kGAAkG,UAAU,kGAAkG,UAAU,oGAAoG,UAAU,4BAA4B,OAAO,oHAAoH,kBAAkB,kBAAkB,MAAM,gEAAgE,mCAAmC,kBAAkB,MAAM,+DAA+D,+BAA+B,uOAAuO,EAAE,GAAG,kGAAkG,QAAQ,aAAa,QAAQ,4DAA4D,EAAE,GAAG,qMAAqM,GAAG,0F;;;;;;;;;;;ACA5hF,sCAAsC,0BAA0B,oBAAoB,sBAAsB,6CAA6C,wBAAwB,iCAAiC,qBAAqB,wBAAwB,qBAAqB,+BAA+B,EAAE,+CAA+C,25B;;;;;;;;;;;;;;;;;;ACAhT;AACW;AAO7D;IAME,kBACU,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAL1B,cAAS,GAAG,EAAE,CAAC;QACtB,WAAM,GAAG,EAAE,CAAC;QACZ,eAAU,GAAG,IAAI,CAAC;IAIf,CAAC;IAEJ,2BAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,6BAAU,GAAV;QAAA,iBAMC;QALC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,IAAI,CAAE,UAAC,CAAQ;YACvC,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,KAAK,CAAE,WAAC;YACT,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAA+B;IAC/B,mBAAmB;IACnB,2DAA2D;IAC3D,IAAI;IAEJ,6BAAU,GAAV,UAAW,CAAC,EAAE,KAAK;QACjB,IAAI,IAAI,CAAC,UAAU,KAAK,KAAK,EAAE;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;SACxB;IACH,CAAC;IAlCU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;+EAQmB,wEAAc;OAPtB,QAAQ,CAmCpB;IAAD,eAAC;CAAA;AAnCoB;;;;;;;;;;;;;;;;;;;;ACR8B;AACY;AACrB;AAE1C,IAAM,GAAG,GAAG,wBAAwB,CAAC;AAMrC;IAKE,oBACU,IAAgB,EAChB,QAAkB;QADlB,SAAI,GAAJ,IAAI,CAAY;QAChB,aAAQ,GAAR,QAAQ,CAAU;QAJrB,UAAK,GAAG,IAAI,CAAC;IAMpB,CAAC;IAED,6BAAQ,GAAR;IACA,CAAC;IAEK,+BAAU,GAAhB;;;;;gBACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;oBAC1B,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACxC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACT,MAAI,CAAC,CAAC,YAAY,CAAC;oBACzB,UAAU,CAAE;;;;wCACA,qBAAM,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,YAAU,GAAG,CAAC;;oCAA/D,CAAC,GAAG,SAA2D;oCAC9D,qBAAM,CAAC;wCAAd,sBAAO,SAAO,EAAC;;;yBAChB,CAAC,CAAC;iBACJ;;;;KACF;IAEM,wBAAG,GAAV,UAAW,GAAW,EAAE,MAAW,EAAE,IAAU;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,GAAG,GAAG,GAAK,EAAE,EAAE,OAAO,EAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAC3H,CAAC;IAEM,yBAAI,GAAX,UAAY,GAAW,EAAE,MAAW,EAAE,IAAU;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAG,GAAG,GAAG,GAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACpI,CAAC;IAEM,wBAAG,GAAV,UAAW,GAAW,EAAE,MAAW,EAAE,IAAU;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,GAAG,GAAG,GAAK,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACnI,CAAC;IAEM,2BAAM,GAAb,UAAc,GAAW,EAAE,MAAW,EAAE,IAAU;QAChD,4CAA4C;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,GAAG,GAAG,GAAG,SAAI,MAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,gEAAW,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IACxI,CAAC;IA1CU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAOgB,+DAAU;YACN,uDAAQ;OAPjB,UAAU,CA4CtB;IAAD,iBAAC;CAAA;AA5CsB;;;;;;;;;;;;;;;;;;;ACVoB;AACA;AAK3C;IAEE,wBACU,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;IACrB,CAAC;IAEL,mCAAU,GAAV;QACE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IARU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIe,uDAAU;OAHd,cAAc,CAS1B;IAAD,qBAAC;CAAA;AAT0B","file":"list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar no-border color=\\\"primary\\\">\\n    <!-- <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons> -->\\n    <ion-title>\\n      API Docs\\n    </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ng-container *ngIf=\\\"showparams !== 99999\\\">\\n        <ion-button (click)=\\\"showparams = 99999\\\">\\n          <ion-icon  mode=\\\"ios\\\" slot=\\\"start\\\" name=\\\"apps\\\"></ion-icon>\\n        </ion-button>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"showparams === 99999\\\">\\n        <ion-button (click)=\\\"showparams = null\\\">\\n          <ion-icon   mode=\\\"ios\\\" slot=\\\"start\\\" name=\\\"list\\\"></ion-icon>\\n        </ion-button>\\n      </ng-container>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list lines=\\\"full\\\" color=\\\"medium\\\">\\n    <ng-container *ngFor=\\\"let i of endpoints; let r = index;\\\" >\\n      <ion-item (click)=\\\"showParams(i, r)\\\" class=\\\"__IN\\\" [ngClass]=\\\"{ 'active' : showparams === r && i.params.length > 0, 'pointer': i.params.length > 0 }\\\">\\n        <ion-label color=\\\"dark\\\">\\n          <p>\\n            <ion-badge *ngIf=\\\"i.method === 'post'\\\" color=\\\"primary\\\" mode=\\\"md\\\">{{i.method}}</ion-badge>\\n            <ion-badge *ngIf=\\\"i.method === 'put'\\\" color=\\\"warning\\\" mode=\\\"md\\\">{{i.method}}</ion-badge>\\n            <ion-badge *ngIf=\\\"i.method === 'get'\\\" color=\\\"success\\\" mode=\\\"md\\\">{{i.method}}</ion-badge>\\n            <ion-badge *ngIf=\\\"i.method === 'delete'\\\" color=\\\"danger\\\" mode=\\\"md\\\">{{i.method}}</ion-badge>\\n            {{i.url}}\\n          </p>\\n          <p class=\\\"actions\\\">\\n            <ion-badge *ngIf=\\\"i.fromAddon.name\\\" mode=\\\"ios\\\">{{i.fromAddon.name}}</ion-badge>&nbsp;&nbsp;\\n            <ion-badge *ngIf=\\\"i.query\\\" mode=\\\"ios\\\">Query {{i.query.entity + '.' + i.query.id}}</ion-badge>&nbsp;&nbsp;\\n            <ion-badge mode=\\\"ios\\\" *ngIf=\\\"i.controller\\\">{{i.controller + '.' + i.action}}</ion-badge>\\n          </p>\\n          <ng-container *ngIf=\\\"i.params.length > 0\\\">\\n            <code *ngIf=\\\"showparams === r || showparams === 99999\\\" >\\n              <h3>Params</h3>\\n              <div>\\n                <p>{{'{'}}</p>\\n                <ng-container *ngFor=\\\"let p of i.params\\\">\\n                  <p><strong>{{p.name}}:</strong> {{p.type}}</p>\\n                </ng-container>\\n                <p>{{'}'}}</p>\\n              </div>\\n            </code>\\n          </ng-container>\\n        </ion-label>\\n        <div class=\\\"item-note auth\\\" slot=\\\"end\\\" *ngFor=\\\"let r of i.permissions\\\">\\n          {{r}}\\n        </div>\\n      </ion-item>\\n    </ng-container>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \".actions ion-badge {\\n  display: inline-block;\\n  font-size: 10px;\\n  padding: 5px 10px;\\n  background-color: var(--ion-color-light);\\n  border-radius: 50px;\\n  color: var(--ion-color-dark);\\n  font-weight: 300;\\n  letter-spacing: 0px;\\n  margin-top: 10px;\\n  text-transform: capitalize; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9UZXJ0aXVzL0Ryb3Bib3gvZmlsZXMvZW1zcmFpbC9zd2FnZ2VyL3NyYy9hcHAvbGlzdC9saXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLHdDQUF3QztFQUN4QyxtQkFBbUI7RUFDbkIsNEJBQTRCO0VBQzVCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLDBCQUEwQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbGlzdC9saXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb25zIHtcbiAgICBpb24tYmFkZ2Uge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWlvbi1jb2xvci1saWdodCk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFyayk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwcHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SwaggerService } from '../services/swagger.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: 'list.page.html',\n  styleUrls: ['list.page.scss']\n})\nexport class ListPage implements OnInit {\n\n  public endpoints = [];\n  params = [];\n  showparams = null;\n\n  constructor(\n    private swagger: SwaggerService\n  ) {}\n\n  ngOnInit() {\n    this.getSwagger();\n  }\n\n  getSwagger() {\n    this.swagger.getSwagger().then( (d: any[]) => {\n      this.endpoints = d;\n    }).catch( e => {\n      console.log(e);\n    });\n  }\n  // add back when alpha.4 is out\n  // navigate(item) {\n  //   this.router.navigate(['/list', JSON.stringify(item)]);\n  // }\n\n  showParams(p, index) {\n    if (this.showparams === index) {\n      this.showparams = null;\n      this.params = [];\n    } else {\n      this.showparams = index;\n      this.params = p.params;\n    }\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Platform } from '@ionic/angular';\n\nconst API = 'http://localhost:8080/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService implements OnInit {\n\n  private rest: any;\n  public TOKEN = null;\n\n  constructor(\n    private http: HttpClient,\n    private platform: Platform,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  async getHeaders() {\n    if (!this.platform.is('cordova')) {\n      const u = window.localStorage.getItem('User');\n      const i = JSON.parse(u);\n      console.log(i);\n      const H = i.access_token;\n      setTimeout( async () => {\n        const h = await new HttpHeaders().set('Authorization', `Bearer ${H}`);\n        return await h;\n      });\n    }\n  }\n\n  public get(url: string, params: any, head?: any) {\n    return this.http.get(`${API}${url}`, { headers: new HttpHeaders().set('Content-Type', `application/json`) }).toPromise();\n  }\n\n  public post(url: string, params: any, head?: any) {\n    return this.http.post(`${API}${url}`, params, { headers: new HttpHeaders().set('Content-Type', `application/json`) }).toPromise();\n  }\n\n  public put(url: string, params: any, head?: any) {\n    return this.http.put(`${API}${url}`, params, { headers: new HttpHeaders().set('Content-Type', `application/json`) }).toPromise();\n  }\n\n  public delete(url: string, params: any, head?: any) {\n    // tslint:disable-next-line: max-line-length\n    return this.http.delete(`${API}${url}?${params}`, { headers: new HttpHeaders().set('Content-Type', `application/json`) }).toPromise();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwaggerService {\n\n  constructor(\n    private api: ApiService\n  ) { }\n\n  getSwagger() {\n    return this.api.get('api/swagger/docs', null);\n  }\n}\n"],"sourceRoot":""}