import { App } from '../../lib';
import { Npx } from '../lib/npx';
import { WebsocketInstance } from '../../lib/websocket';
import { AngularCli } from '../lib/angular-cli';
import { VueCli } from '../lib/vue-cli';
import { ReactScripts } from '../lib/react-scripts';
import { PackageManager } from '../../lib/package-manager';
export declare class BoilerplateController {
    private app;
    npx: Npx;
    angularCli: AngularCli;
    vueCli: VueCli;
    reactScripts: ReactScripts;
    packageManager: PackageManager;
    constructor(app: App, websocket: WebsocketInstance);
    initMinimal(req: any, res: any): void;
    initBoilerplate(req: any, res: any): void | Promise<any>;
    initAngular(req: any, res: any): void;
    initDefaultAngular(params: {
        type: string;
        output: string;
        name: string;
    }): Promise<void>;
    initAngularMonoPackage(params: any): Promise<void>;
    initReact(req: any, res: any): Promise<any>;
    initVue(req: any, res: any): void;
    initDefaultVue(params: any): Promise<void>;
    initVueMonoPackage(params: any): Promise<void>;
    private _emitMessage;
    private _emitError;
    private _checkFolderParams;
    private _fileToJson;
    private _installBoilerplateCli;
    private _mergeAngularPackage;
    private _mergeBoilerplateProjectFolder;
    private _mergeVuePackage;
    private _moveItem;
    private _newAngularProject;
    private _newVueProject;
    private _renameBoilerplateClientFolder;
    private _removeBoilerplatePackage;
    private _removeBoilerplateNodeModules;
    private _removeOldBoilerplateProjectDirectory;
    private _removeItemIfExists;
}
