import { IFindAllOptions, IQueryOrdering } from '@materia/interfaces';
import { FindOptions } from 'sequelize';
import { Query } from '../query';
import { Conditions } from './utils/conditions';
export declare class FindAllQuery extends Query {
    opts: IFindAllOptions;
    type: string;
    conditions: Conditions;
    include: any;
    limit: number | string;
    page: number | string;
    offset: number | string;
    orderBy: IQueryOrdering[];
    select: string[];
    constructor(entity: any, id: any, opts?: IFindAllOptions);
    refresh(): void;
    discoverParams(): void;
    discoverParam(param: string, type: string, required?: boolean): void;
    constructSequelizeOpts(params: any, options?: any): FindOptions;
    run(params: any, options: any): Promise<any>;
    getPagination(params: any): {
        limit: any;
        offset: any;
    };
    toJson(): {
        id: string;
        type: string;
        opts: IFindAllOptions;
    };
    private _paramResolver;
    private _run;
}
