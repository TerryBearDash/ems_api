import { IEntityConfig, IField, IFieldUpdate } from '@materia/interfaces';
import { Entity } from './entity';
import { App } from '../app';
import { Field } from './field';
import { ModelStatic } from '../database/interface';
export declare class DBEntity extends Entity {
    type: string;
    currentDiff: Array<any>;
    currentDiffUndo: Array<any>;
    model: ModelStatic;
    reservedQueries: string[];
    constructor(app: App);
    updatePrimary(field: any, fieldobj: any, options: any): Promise<any>;
    updateUnique(field: any, fieldobj: any): any;
    updateField(name: string, field: IFieldUpdate, options?: any): Promise<Field>;
    addFieldAt(field: IField, at: number, options?: any): Promise<Field>;
    removeField(field: any, options: any): Promise<void>;
    generateDefaultQueries(): void;
    loadModel(): Promise<void>;
    loadRelationsInModel(): void;
    toJson(): IEntityConfig;
}
