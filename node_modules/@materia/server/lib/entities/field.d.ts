import { IField, IFieldReference } from '@materia/interfaces';
import { Entity } from './entity';
export declare const DefaultComponent: Readonly<{
    text: string;
    number: string;
    date: string;
    float: string;
    boolean: string;
}>;
export declare const FieldType: Readonly<{
    TEXT: string;
    NUMBER: string;
    DATE: string;
    FLOAT: string;
    BOOL: string;
}>;
export declare class Field {
    private entity;
    name: string;
    type: string;
    primary: boolean;
    unique: boolean | string;
    required: boolean;
    default: boolean;
    defaultValue: any;
    autoIncrement: boolean;
    onUpdate: string;
    onDelete: string;
    title: boolean;
    component: string;
    read: boolean;
    write: boolean;
    isRelation: any;
    references: IFieldReference;
    validators: Array<any>;
    constructor(entity: Entity, field: IField);
    setDefaultValue(): void;
    toJson(): IField;
    isDefaultRelationField(): boolean;
    fillDefault(): void;
    update(field: IField): void;
    setType(type: string): boolean;
    addValidator(name: string, value: any): void;
    removeValidator(name: string): boolean;
}
