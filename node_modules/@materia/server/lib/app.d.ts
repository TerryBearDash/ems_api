/// <reference types="node" />
import * as events from 'events';
import { IAppOptions, ITreeFile } from '@materia/interfaces';
import { Logger } from './logger';
import { Config } from './config';
import { Server } from './server';
import { Entities } from './entities';
import { Database } from './database';
import { Synchronizer } from './synchronizer';
import { SelfMigration } from './self-migration';
import { History } from './history';
import { Client } from './client';
import { Addons } from './addons';
import { Api } from './api';
import { MateriaApi } from '../api';
import { Watcher } from './watcher';
import { Actions } from './actions';
export * from './addons/helpers';
export declare enum AppMode {
    DEVELOPMENT,
    PRODUCTION
}
/**
 * @class App
 * @classdesc
 * The main objects are available from this class.
 * @property {Server} server - Access to the server's options
 * @property {Api} api - Access to the server's endpoints
 * @property {History} history - Access to the history and past actions
 * @property {Database} database - Access to the database methods
 * @property {Addons} addons - Access to the addons methods
 * @property {Entities} entities - Access to the app's entities
 */
export declare class App extends events.EventEmitter {
    path: string;
    options?: IAppOptions;
    id: string;
    name: string;
    package: string;
    version?: string;
    icon?: string;
    zoom?: number;
    materia_path: string;
    mode: AppMode;
    loaded: boolean;
    history: History;
    entities: Entities;
    addons: Addons;
    database: Database;
    api: Api;
    server: Server;
    client: Client;
    logger: Logger;
    config: Config;
    selfMigration: SelfMigration;
    materiaApi: MateriaApi;
    watcher: Watcher;
    status: boolean;
    live: boolean;
    synchronizer: Synchronizer;
    invalid: boolean;
    error: string;
    rootPassword: string;
    actions: Actions;
    constructor(path: string, options?: IAppOptions);
    loadMateria(): Promise<void>;
    startFallback(): Promise<any>;
    load(): Promise<any>;
    createDockerfile(options?: any): void;
    createAppYaml(options: any): void;
    saveGCloudSettings(settings: any): void;
    setPackageScript(name: any, script: any): void;
    saveMateria(): void;
    /**
    Starts the materia app
    @returns {Promise<number>}
    */
    start(): Promise<number>;
    startWithoutFailure(): Promise<number>;
    /**
    Stops the materia app
    @returns {Promise}
    */
    stop(): Promise<void>;
    getAllFiles(name: any, p: any): Promise<{}>;
    getFile(filepath: string): ITreeFile;
    getFiles(depth: number, name?: string, p?: string): ITreeFile;
    initializeStaticDirectory(): Promise<void>;
    getWatchableFiles(): any[];
    readFile(fullpath: any): string;
    saveFile(fullpath: string, content: string, opts?: any): Promise<any>;
    getMateriaVersion(): string;
    private doSelfMigrations;
    private _getFile;
    private _getWatchableFiles;
}
