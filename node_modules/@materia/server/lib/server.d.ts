/// <reference types="node" />
import * as express from 'express';
import { Server as HttpServer } from 'http';
import { IConfigOptions } from '@materia/interfaces';
import { App, AppMode } from './app';
import { Session } from './session';
import { WebsocketServers } from './websocket';
/**
 * @class Server
 * @classdesc
 * Represent the server
 */
export declare class Server {
    private app;
    dynamicStatic: any;
    started: boolean;
    disabled: boolean;
    expressApp: express.Application;
    passport: any;
    websocket: WebsocketServers;
    server: HttpServer;
    session: Session;
    private config;
    private sockets;
    private stopped;
    constructor(app: App);
    load(): void;
    createDynamicStatic(path: any): any;
    /**
    Get the base url for endpoints
    @returns {string}
    */
    getBaseUrl(path?: string, mode?: AppMode, options?: IConfigOptions): string;
    /**
    Return true if the server is started
    @returns {boolean}
    */
    isStarted(): boolean;
    /**
    Return true if the server has a static page
    @returns {boolean}
    */
    hasStatic(): boolean;
    /**
    Starts the server and listen on its endpoints.
    @returns {Promise<number>}
    */
    start(opts?: any): Promise<number>;
    /**
    Stops the server.
    */
    stop(): Promise<void>;
    private _onConnection;
    private _onRequest;
    private _listenConnections;
}
