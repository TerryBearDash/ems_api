import { IPermission } from '@materia/interfaces';
import { App } from '../app';
import { Permission } from './permission';
/**
 * @class Permissions
 * @classdesc
 * This class is used to set middlewares to the endpoints.
*/
export declare class Permissions {
    private app;
    permissions: Permission[];
    constructor(app: App);
    /**
     * Get a function composed by one or many chained midlewares
     * @param {Array<string>} - Array of permission names
     * @returns {function} - A middleware function
     */
    check(permissionsName: Array<string>): (reqOrig: any, resOrig: any, nextOrig: any) => void;
    /**
     * Load all the registered permissions
     */
    load(): Promise<void>;
    /**
     * Remove all permissions
    */
    clear(): void;
    /**
     * Get all the registered permissions objects
     * @returns {Array<Permission>}
    */
    findAll(): Array<Permission>;
    /**
    Get a permission's object
    @param {string} - The permission name
    @returns {function} - Permission object
    */
    get(name: string): Permission;
    /**
     * Add a permission.
     * @param {IPermission} - The permission's JSON representation to add
     * @param {object} - options
     * @returns {Promise<Permission>} - Newly added permission object
    */
    add(perm: IPermission, opts?: any): Promise<Permission>;
    /**
     * Update a permission
     * @param {string} - Name of the permission before update
     * @param {IPermission} - permission json representation
     * @param {object} - options
     * @returns {Promise<Permission>} - Permission object
    */
    update(name: string, permission: IPermission, opts?: any): Promise<Permission>;
    /**
     * Remove a permission
     * @param {string} - The permission name
     * @returns {Promise}
    */
    remove(name: any, opts?: any): Promise<void>;
    /**
     * Save all current permissions as JSON in APP_PATH/server/permissions.json
    */
    save(): Promise<void>;
    /**
     * Get all permissions as JSON representation array
     * @returns {Array<IPermission>}
    */
    toJson(): IPermission[];
    private isClass;
}
