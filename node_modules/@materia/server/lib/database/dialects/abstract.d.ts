import { Sequelize } from 'sequelize';
import * as Bluebird from 'bluebird';
export declare class AbstractDialect {
    sequelize: Sequelize;
    constructor(sequelize: Sequelize);
    showTables(): any;
    getIndices(table: any): Bluebird<any>;
    _getFKs(table: any): Bluebird<any>;
    getFKs(table: any): Bluebird<any>;
    addColumn(table: any, column_name: any, attributes: any): Bluebird<any>;
    changeColumn(table: any, column_name: any, attributes: any): any;
    removeColumn(table: any, column_name: any): Bluebird<any>;
    renameColumn(table: any, column_name: any, column_new_name: any): Bluebird<any>;
    dropConstraint(table: any, constraint: any): any;
    addConstraint(table: any, constraint: any): any;
    castColumnType(table: any, column_name: any, old_type: any, type: any): Promise<any>;
    authenticate(): Bluebird<any>;
    define(entityName: any, cols: any, defOptions: any): typeof import("sequelize/types").Model;
}
