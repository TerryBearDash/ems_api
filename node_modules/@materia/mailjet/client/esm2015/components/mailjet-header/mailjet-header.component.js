/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
export class MailjetHeaderComponent {
    constructor() {
        this.settingsOpened = new EventEmitter();
        this.sendDialogOpened = new EventEmitter();
        this.timelineChanged = new EventEmitter();
    }
}
MailjetHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'mailjet-header',
                template: "<img src=\"https://raw.githubusercontent.com/materiahq/materia-website-content/master/logo/addons/mailjet.jpg\">\r\n<div class=\"settings-detail\" fxFlex *ngIf=\"settings && settings.from && settings.apikey\">\r\n  Emails are sent from\r\n  <strong>{{settings.from}}</strong> with\r\n  <strong>Mailjet</strong>\r\n  <br>using the following Mailjet APIKey:\r\n  <strong>{{settings.apikey.substr(0, 5) + '*****' + settings.apikey.substr(-5, 5)}}\r\n  </strong>\r\n  <br>\r\n  <a class=\"settings-link\" (click)=\"settingsOpened.emit()\">Edit the settings</a>\r\n</div>\r\n<div class=\"settings-detail\" fxFlex *ngIf=\"settings && (! settings.from || !settings.apikey)\">\r\n  You need to configure this addon to send email in your application.\r\n  <br>\r\n  <a class=\"settings-link\" (click)=\"settingsOpened.emit()\">Configure it now!</a>\r\n</div>\r\n<div fxLayout=\"column\" fxLayoutAlign=\"start center\" *ngIf=\"settings && settings.from && settings.apikey && ! error\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"sendDialogOpened.emit()\">Send a test email</button>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <mat-button-toggle-group #statsButtonGroup=\"matButtonToggleGroup\" value=\"lastWeek\" (valueChange)=\"timelineChanged.emit($event)\" *ngIf=\"settings && settings.from && settings.apikey && ! error\">\r\n    <mat-button-toggle value=\"lastWeek\">Week</mat-button-toggle>\r\n    <mat-button-toggle value=\"lastMonth\">Month</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{display:flex;flex-direction:row;height:84px;min-height:84px}.settings-detail{padding-top:15px;margin-left:20px}.settings-detail .settings-link{cursor:pointer;text-decoration:underline}.mat-button-toggle-checked{background-color:#fff;color:#ffa726;border:1px solid #ffa726}button,mat-button-toggle-group{margin:10px}img{height:84px}"]
            }] }
];
MailjetHeaderComponent.propDecorators = {
    settings: [{ type: Input }],
    error: [{ type: Input }],
    settingsOpened: [{ type: Output }],
    sendDialogOpened: [{ type: Output }],
    timelineChanged: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    MailjetHeaderComponent.prototype.settings;
    /** @type {?} */
    MailjetHeaderComponent.prototype.error;
    /** @type {?} */
    MailjetHeaderComponent.prototype.settingsOpened;
    /** @type {?} */
    MailjetHeaderComponent.prototype.sendDialogOpened;
    /** @type {?} */
    MailjetHeaderComponent.prototype.timelineChanged;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbGpldC1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG1hdGVyaWEvbWFpbGpldC8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvbWFpbGpldC1oZWFkZXIvbWFpbGpldC1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUWhHLE1BQU0sT0FBTyxzQkFBc0I7SUFObkM7UUFTWSxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDcEMscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0QyxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFFekQsQ0FBQzs7O1lBYkEsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLDQvQ0FBOEM7Z0JBRTlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRDs7O3VCQUVFLEtBQUs7b0JBQ0wsS0FBSzs2QkFDTCxNQUFNOytCQUNOLE1BQU07OEJBQ04sTUFBTTs7OztJQUpQLDBDQUF1Qjs7SUFDdkIsdUNBQXdCOztJQUN4QixnREFBOEM7O0lBQzlDLGtEQUFnRDs7SUFDaEQsaURBQXVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ21haWxqZXQtaGVhZGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbWFpbGpldC1oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL21haWxqZXQtaGVhZGVyLmNvbXBvbmVudC5zY3NzJ10sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIE1haWxqZXRIZWFkZXJDb21wb25lbnQge1xyXG4gIEBJbnB1dCgpIHNldHRpbmdzOiBhbnk7XHJcbiAgQElucHV0KCkgZXJyb3I6IGJvb2xlYW47XHJcbiAgQE91dHB1dCgpIHNldHRpbmdzT3BlbmVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBzZW5kRGlhbG9nT3BlbmVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSB0aW1lbGluZUNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyPHN0cmluZz4oKTtcclxuXHJcbn1cclxuIl19