/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, ViewChild, TemplateRef, EventEmitter } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
export class TemplateEditorComponent {
    /**
     * @param {?} fb
     */
    constructor(fb) {
        this.fb = fb;
        this.cancelled = new EventEmitter();
        this.confirmed = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.refreshTemplateForm();
    }
    /**
     * @return {?}
     */
    refreshTemplateForm() {
        this.templateForm = this.fb.group({
            name: ['', Validators.required],
            author: [this.user ? this.user.Username : '', Validators.required],
            templateType: ['transactional', Validators.required]
        });
    }
    /**
     * @return {?}
     */
    confirm() {
        this.confirmed.emit(this.templateForm.value);
    }
    /**
     * @return {?}
     */
    cancel() {
        this.cancelled.emit();
    }
}
TemplateEditorComponent.decorators = [
    { type: Component, args: [{
                selector: 'mailjet-template-editor',
                template: "<ng-template #templateDialog>\r\n  <mat-toolbar class=\"mailjet-theme\">\r\n    <mat-icon>\r\n      chrome_reader_mode\r\n    </mat-icon>\r\n    <h1>{{ edition ? 'Edit' : 'New' }} template</h1>\r\n  </mat-toolbar>\r\n  <form fxLayout=\"column\" [formGroup]=\"templateForm\">\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Template name\" formControlName=\"name\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Author\" formControlName=\"author\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-select placeholder=\"Template type\" formControlName=\"templateType\">\r\n        <mat-option value=\"marketing\">\r\n          Marketing\r\n        </mat-option>\r\n        <mat-option value=\"transactional\">\r\n          Transactional\r\n        </mat-option>\r\n        <mat-option value=\"automation\">\r\n          Automation\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <button mat-raised-button class=\"mailjet-theme\" (click)=\"confirm()\">Confirm</button>\r\n      <button mat-raised-button (click)=\"cancel()\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n",
                styles: ["button{margin:5px}.mailjet-theme{background:#ffa726;color:#fff}form{padding:10px 15px}mat-icon{margin:8px}mat-form-field{width:180px}"]
            }] }
];
/** @nocollapse */
TemplateEditorComponent.ctorParameters = () => [
    { type: FormBuilder }
];
TemplateEditorComponent.propDecorators = {
    edition: [{ type: Input }],
    settings: [{ type: Input }],
    user: [{ type: Input }],
    cancelled: [{ type: Output }],
    confirmed: [{ type: Output }],
    template: [{ type: ViewChild, args: ['templateDialog',] }]
};
if (false) {
    /** @type {?} */
    TemplateEditorComponent.prototype.templateForm;
    /** @type {?} */
    TemplateEditorComponent.prototype.edition;
    /** @type {?} */
    TemplateEditorComponent.prototype.settings;
    /** @type {?} */
    TemplateEditorComponent.prototype.user;
    /** @type {?} */
    TemplateEditorComponent.prototype.cancelled;
    /** @type {?} */
    TemplateEditorComponent.prototype.confirmed;
    /** @type {?} */
    TemplateEditorComponent.prototype.template;
    /**
     * @type {?}
     * @private
     */
    TemplateEditorComponent.prototype.fb;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtZWRpdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BtYXRlcmlhL21haWxqZXQvIiwic291cmNlcyI6WyJkaWFsb2dzL3RlbXBsYXRlLWVkaXRvci90ZW1wbGF0ZS1lZGl0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdEcsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQWEsTUFBTSxnQkFBZ0IsQ0FBQztBQVFwRSxNQUFNLE9BQU8sdUJBQXVCOzs7O0lBV2xDLFlBQW9CLEVBQWU7UUFBZixPQUFFLEdBQUYsRUFBRSxDQUFhO1FBTHpCLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9CLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBSUYsQ0FBQzs7OztJQUV4QyxRQUFRO1FBQ04sSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELG1CQUFtQjtRQUNqQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1lBQ2hDLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDO1lBQy9CLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUNsRSxZQUFZLEVBQUUsQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQztTQUNyRCxDQUFDLENBQUM7SUFDTCxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0MsQ0FBQzs7OztJQUVELE1BQU07UUFDSixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3hCLENBQUM7OztZQXBDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsaXZDQUErQzs7YUFFaEQ7Ozs7WUFQUSxXQUFXOzs7c0JBVWpCLEtBQUs7dUJBQ0wsS0FBSzttQkFDTCxLQUFLO3dCQUVMLE1BQU07d0JBQ04sTUFBTTt1QkFFTixTQUFTLFNBQUMsZ0JBQWdCOzs7O0lBUjNCLCtDQUF3Qjs7SUFDeEIsMENBQWlCOztJQUNqQiwyQ0FBa0I7O0lBQ2xCLHVDQUFjOztJQUVkLDRDQUF5Qzs7SUFDekMsNENBQXlDOztJQUV6QywyQ0FBd0Q7Ozs7O0lBRTVDLHFDQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQsIFRlbXBsYXRlUmVmLCBFdmVudEVtaXR0ZXJ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3JtQnVpbGRlciwgVmFsaWRhdG9ycywgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbWFpbGpldC10ZW1wbGF0ZS1lZGl0b3InLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi90ZW1wbGF0ZS1lZGl0b3IuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3RlbXBsYXRlLWVkaXRvci5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUZW1wbGF0ZUVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgdGVtcGxhdGVGb3JtOiBGb3JtR3JvdXA7XHJcbiAgQElucHV0KCkgZWRpdGlvbjtcclxuICBASW5wdXQoKSBzZXR0aW5ncztcclxuICBASW5wdXQoKSB1c2VyO1xyXG5cclxuICBAT3V0cHV0KCkgY2FuY2VsbGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBjb25maXJtZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ3RlbXBsYXRlRGlhbG9nJykgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZmI6IEZvcm1CdWlsZGVyKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcbiAgICB0aGlzLnJlZnJlc2hUZW1wbGF0ZUZvcm0oKTtcclxuICB9XHJcblxyXG4gIHJlZnJlc2hUZW1wbGF0ZUZvcm0oKSB7XHJcbiAgICB0aGlzLnRlbXBsYXRlRm9ybSA9IHRoaXMuZmIuZ3JvdXAoe1xyXG4gICAgICBuYW1lOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxyXG4gICAgICBhdXRob3I6IFt0aGlzLnVzZXIgPyB0aGlzLnVzZXIuVXNlcm5hbWUgOiAnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXHJcbiAgICAgIHRlbXBsYXRlVHlwZTogWyd0cmFuc2FjdGlvbmFsJywgVmFsaWRhdG9ycy5yZXF1aXJlZF1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY29uZmlybSgpIHtcclxuICAgIHRoaXMuY29uZmlybWVkLmVtaXQodGhpcy50ZW1wbGF0ZUZvcm0udmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgY2FuY2VsKCkge1xyXG4gICAgdGhpcy5jYW5jZWxsZWQuZW1pdCgpO1xyXG4gIH1cclxuXHJcbn1cclxuIl19