/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
var MailjetHeaderComponent = /** @class */ (function () {
    function MailjetHeaderComponent() {
        this.settingsOpened = new EventEmitter();
        this.sendDialogOpened = new EventEmitter();
        this.timelineChanged = new EventEmitter();
    }
    MailjetHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mailjet-header',
                    template: "<img src=\"https://raw.githubusercontent.com/materiahq/materia-website-content/master/logo/addons/mailjet.jpg\">\r\n<div class=\"settings-detail\" fxFlex *ngIf=\"settings && settings.from && settings.apikey\">\r\n  Emails are sent from\r\n  <strong>{{settings.from}}</strong> with\r\n  <strong>Mailjet</strong>\r\n  <br>using the following Mailjet APIKey:\r\n  <strong>{{settings.apikey.substr(0, 5) + '*****' + settings.apikey.substr(-5, 5)}}\r\n  </strong>\r\n  <br>\r\n  <a class=\"settings-link\" (click)=\"settingsOpened.emit()\">Edit the settings</a>\r\n</div>\r\n<div class=\"settings-detail\" fxFlex *ngIf=\"settings && (! settings.from || !settings.apikey)\">\r\n  You need to configure this addon to send email in your application.\r\n  <br>\r\n  <a class=\"settings-link\" (click)=\"settingsOpened.emit()\">Configure it now!</a>\r\n</div>\r\n<div fxLayout=\"column\" fxLayoutAlign=\"start center\" *ngIf=\"settings && settings.from && settings.apikey && ! error\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"sendDialogOpened.emit()\">Send a test email</button>\r\n</div>\r\n<div fxLayout=\"column\">\r\n  <mat-button-toggle-group #statsButtonGroup=\"matButtonToggleGroup\" value=\"lastWeek\" (valueChange)=\"timelineChanged.emit($event)\" *ngIf=\"settings && settings.from && settings.apikey && ! error\">\r\n    <mat-button-toggle value=\"lastWeek\">Week</mat-button-toggle>\r\n    <mat-button-toggle value=\"lastMonth\">Month</mat-button-toggle>\r\n  </mat-button-toggle-group>\r\n</div>\r\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{display:flex;flex-direction:row;height:84px;min-height:84px}.settings-detail{padding-top:15px;margin-left:20px}.settings-detail .settings-link{cursor:pointer;text-decoration:underline}.mat-button-toggle-checked{background-color:#fff;color:#ffa726;border:1px solid #ffa726}button,mat-button-toggle-group{margin:10px}img{height:84px}"]
                }] }
    ];
    MailjetHeaderComponent.propDecorators = {
        settings: [{ type: Input }],
        error: [{ type: Input }],
        settingsOpened: [{ type: Output }],
        sendDialogOpened: [{ type: Output }],
        timelineChanged: [{ type: Output }]
    };
    return MailjetHeaderComponent;
}());
export { MailjetHeaderComponent };
if (false) {
    /** @type {?} */
    MailjetHeaderComponent.prototype.settings;
    /** @type {?} */
    MailjetHeaderComponent.prototype.error;
    /** @type {?} */
    MailjetHeaderComponent.prototype.settingsOpened;
    /** @type {?} */
    MailjetHeaderComponent.prototype.sendDialogOpened;
    /** @type {?} */
    MailjetHeaderComponent.prototype.timelineChanged;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbGpldC1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG1hdGVyaWEvbWFpbGpldC8iLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvbWFpbGpldC1oZWFkZXIvbWFpbGpldC1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhHO0lBQUE7UUFTWSxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFDcEMscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0QyxvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFFekQsQ0FBQzs7Z0JBYkEsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLDQvQ0FBOEM7b0JBRTlDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFDaEQ7OzsyQkFFRSxLQUFLO3dCQUNMLEtBQUs7aUNBQ0wsTUFBTTttQ0FDTixNQUFNO2tDQUNOLE1BQU07O0lBRVQsNkJBQUM7Q0FBQSxBQWJELElBYUM7U0FQWSxzQkFBc0I7OztJQUNqQywwQ0FBdUI7O0lBQ3ZCLHVDQUF3Qjs7SUFDeEIsZ0RBQThDOztJQUM5QyxrREFBZ0Q7O0lBQ2hELGlEQUF1RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdtYWlsamV0LWhlYWRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL21haWxqZXQtaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9tYWlsamV0LWhlYWRlci5jb21wb25lbnQuc2NzcyddLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBNYWlsamV0SGVhZGVyQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBzZXR0aW5nczogYW55O1xyXG4gIEBJbnB1dCgpIGVycm9yOiBib29sZWFuO1xyXG4gIEBPdXRwdXQoKSBzZXR0aW5nc09wZW5lZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgc2VuZERpYWxvZ09wZW5lZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBAT3V0cHV0KCkgdGltZWxpbmVDaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XHJcblxyXG59XHJcbiJdfQ==