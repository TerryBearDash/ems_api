!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material"),require("@materia/addons"),require("@angular/common/http"),require("@angular/common"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define("@materia/users",["exports","@angular/core","@angular/forms","@angular/material","@materia/addons","@angular/common/http","@angular/common","@angular/flex-layout"],e):e((t.materia=t.materia||{},t.materia.users={}),t.ng.core,t.ng.forms,t.ng.material,null,t.ng.common.http,t.ng.common,t.ng["flex-layout"])}(this,function(t,a,n,e,i,o,r,s){"use strict";function l(t,e,n,a){var i,o=arguments.length,r=o<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,a);else for(var s=t.length-1;0<=s;s--)(i=t[s])&&(r=(o<3?i(r):3<o?i(e,n,r):i(e,n))||r);return 3<o&&r&&Object.defineProperty(e,n,r),r}function m(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var p=function(){function t(t){this.fb=t,this.signup=new a.EventEmitter,this.cancel=new a.EventEmitter}return t.prototype.ngOnChanges=function(t){t.profileFields&&t.profileFields.currentValue&&this.initForm()},t.prototype.initForm=function(){this.signupForm=this.fb.group(Object.assign({},{email:["",n.Validators.required],password:["",n.Validators.required]},this.getProfileFormGroup()))},t.prototype.getProfileFormGroup=function(){if(!this.profileFields)return{};var e={};return this.profileFields.forEach(function(t){t.required?e[t.name]=["",n.Validators.required]:e[t.name]=""}),e},t.prototype.ngOnInit=function(){this.initForm()},t.prototype.signupClick=function(){this.signup.emit(this.signupForm.value)},t.decorators=[{type:a.Component,args:[{selector:"materia-signup-form",template:'<ng-template #template>\n\t<mat-card fxLayout="column">\n\t\t<mat-toolbar>Create a new user</mat-toolbar>\n\t\n\t\t<form [formGroup]="signupForm" fxLayout="column" style="padding: 24px;">\n\t\t\t<mat-form-field>\n\t\t\t\t<input formControlName="email" matInput placeholder="Email" required type="email" name="email">\n\t\t\t</mat-form-field>\n\t\n\t\t\t<mat-form-field>\n\t\t\t\t<input formControlName="password" matInput placeholder="Password" required type="password" name="password">\n\t\t\t</mat-form-field>\n\t\t\t<div *ngIf="profileFields.length > 0">\n\t\t\t\t<materia-param-input [showCheckbox]="false" [form]="signupForm" [param]="param" *ngFor="let param of profileFields"></materia-param-input>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button (click)="signup.emit(signupForm.value)" mat-raised-button color="primary">Create</button>\n\t\t\t\t<button (click)="cancel.emit()" mat-raised-button>Cancel</button>\n\t\t\t</div>\n\t\t</form>\n\t</mat-card>\n</ng-template>',styles:["mat-card{width:300px;margin:0p;padding:0}"]}]}],t.ctorParameters=function(){return[{type:n.FormBuilder}]},t.propDecorators={signup:[{type:a.Output}],cancel:[{type:a.Output}],template:[{type:a.ViewChild,args:["template"]}],profileFields:[{type:a.Input}]},t}(),u=function(){function t(t,e,n){this.dialog=t,this.http=e,this.snackbar=n,this.openSetup=new a.EventEmitter,this.loading=!0,this.users=[],this.nbUsers=0}return t.prototype.ngOnInit=function(){this.refreshList(),this.refreshConnectedUser(),this.getProfileParams()},t.prototype.getProfileParams=function(){var n=this;return this.settings&&this.settings.user_profile_enabled&&this.settings.user_profile_entity?this.http.get(this.baseUrl+"/infos").toPromise().then(function(t){var e=t.entities.find(function(t){return t.name===n.settings.user_profile_entity});n.profileFields=e.fields.filter(function(t){return"id_user"!==t.name&&(!t.primary||t.primary&&!t.autoIncrement)})})["catch"](function(t){n.profileFields=[]}):(this.profileFields=[],Promise.resolve())},t.prototype.refreshList=function(){var e=this;this.loading=!0,this.http.post(this.baseUrl+"/entities/user/queries/listWithGravatar",{}).subscribe(function(t){e.users=t.data,e.nbUsers=t.count,e.loading=!1})},t.prototype.refreshConnectedUser=function(){var e=this;this.http.get(this.apiUrl+"/user/me").subscribe(function(t){e.me=t},function(){return e.me=null})},t.prototype.configureEmails=function(){this.displayEmailSettings=!0},t.prototype.hideEmailSettings=function(){this.displayEmailSettings=!1},t.prototype.openSignupDialog=function(){this.signupDialog=this.dialog.open(this.signupDialogComp.template,{panelClass:"no-padding"})},t.prototype.saveEmailSettings=function(e){var n=this;this.http.post(this.baseUrl+"/addons/@materia/users/setup",e).subscribe(function(t){n.snackbar.open("Settings saved!",null,{duration:3e3}),n.hideEmailSettings(),n.settings=e})},t.prototype.closeSignupDialog=function(){this.signupDialog.close()},t.prototype.signup=function(t){var e=this;this.http.post(this.apiUrl+"/user/signup",t).subscribe(function(){e.closeSignupDialog(),e.refreshList(),e.refreshConnectedUser()})},t.prototype.logout=function(){var t=this;this.http.post(this.apiUrl+"/user/logout",{}).subscribe(function(){t.refreshConnectedUser()},function(){return t.refreshConnectedUser()})},t.decorators=[{type:a.Component,args:[{selector:"materia-user-management",template:'<div fxLayout="column" fxFlex>\n\t<div *ngIf="me" style="padding: 8px 16px; background-color: #4CAF50; color: white;">\n\t\tCurrently connected as {{me.email}} (<a style="text-decoration: underline; cursor: pointer;" (click)="logout()">Logout</a>)\n\t</div>\n\t<div fxLayout="row" fxFlex>\n\t\t<mat-card fxLayout="column" fxFlex *ngIf="!loading; else loadingUsers">\n\t\t\t<mat-toolbar fxLayout="row" fxLayoutAlign="start center">\n\t\t\t\t<mat-icon>people</mat-icon>\n\t\t\t\t<span>\n\t\t\t\t\tUsers\n\t\t\t\t</span>\n\t\t\t\t<span fxFlex></span>\n\t\t\t\t<button *ngIf="!displayEmailSettings && settings.email_verification && settings.email_addon" style="margin-right: 8px;" (click)="configureEmails()" mat-button>Configure emails</button>\n\t\t\t\t<button mat-mini-fab (click)="openSignupDialog()" matTooltip="New User" matTooltipPosition="left" style="width: 31px; height: 31px;">\n\t\t\t\t\t<mat-icon style="position: relative; top: -6px; left: -4px;">add</mat-icon>\n\t\t\t\t</button>\n\t\t\t</mat-toolbar>\n\t\t\t<div *ngIf="users && users.length; else noUser" style="border-top: 1px solid #EEE; overflow-y: auto;" fxLayout="column" fxFlex>\n\t\t\t\t<div fxLayout="row" fxLayoutAlign="start center" *ngFor="let user of users" style="border-bottom: 1px solid #EEE; cursor: pointer;min-height: 40px">\n\t\t\t\t\t<img [src]="user.gravatar" class="avatar" style="margin: 0 8px; width:32px; height:32px;border-radius: 100%" />\n\t\t\t\t\t<div style="color: #999; padding-top: 0">{{user.email}}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ng-template #noUser>\n\t\t\t\t<div fxFlex fxLayout="column" fxLayoutAlign="center center" class="no-users">\n\t\t\t\t\t<span>There is no users registered yet</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button (click)="openSignupDialog()" mat-raised-button color="primary" [style.margin]="\'15px\'" [style.color]="\'white\'">Create\n\t\t\t\t\t\t\ta user</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t</mat-card>\n\t\t<ng-template #loadingUsers>\n\t\t\t<mat-card fxLayout="column" fxFlex fxLayoutAlign="center center">\n\t\t\t\t<mat-spinner></mat-spinner>\n\t\t\t</mat-card>\n\t\t</ng-template>\n\t\t<div style="margin: 8px;" *ngIf="displayEmailSettings" fxLayout="column" fxFlex>\n\t\t\t<mat-toolbar fxLayout="row" fxLayoutAlign="start center">\n\t\t\t\t<button mat-icon-button (click)="hideEmailSettings()" matTooltip="Hide email settings" matTooltipPosition="right">\n\t\t\t\t\t<mat-icon>arrow_back</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<mat-icon>mail</mat-icon>\n\t\t\t\t<span>\n\t\t\t\t\tEmails\n\t\t\t\t</span>\n\t\t\t\t<span fxFlex></span>\n\t\t\t</mat-toolbar>\n\t\t\t<materia-user-management-email-settings [settings]="settings" [baseUrl]="baseUrl"\n\t\t\t\t(hide)="hideEmailSettings()" (save)="saveEmailSettings($event)" fxFlex style="overflow-y: auto;">\n\t\t\t</materia-user-management-email-settings>\n\t\t</div>\n\t</div>\n</div>\n<materia-signup-form #signupFormTemplate [profileFields]="profileFields" (signup)="signup($event)" (cancel)="closeSignupDialog()"></materia-signup-form>',styles:[":host{flex:1 1 0}mat-card{margin:8px;padding:0}mat-icon{margin:2px 8px}.no-users{font-style:italic}"],providers:[]}]}],t.ctorParameters=function(){return[{type:e.MatDialog},{type:o.HttpClient},{type:e.MatSnackBar}]},t.propDecorators={app:[{type:a.Input}],settings:[{type:a.Input}],baseUrl:[{type:a.Input}],apiUrl:[{type:a.Input}],openSetup:[{type:a.Output}],signupDialogComp:[{type:a.ViewChild,args:[p]}]},t=l([i.AddonView("@materia/users"),m("design:paramtypes",[e.MatDialog,o.HttpClient,e.MatSnackBar])],t)}(),d=function(){function t(t,e){this.fb=t,this.http=e,this.save=new a.EventEmitter,this.cancel=new a.EventEmitter,this.emailAddons=[]}return t.prototype.getSettingsProperty=function(t,e){return this.settings&&this.settings[t]||e},t.prototype.ngOnInit=function(){var e=this;this.http.get(this.baseUrl+"/infos").toPromise().then(function(t){e.loginForm=e.fb.group({method:[e.getSettingsProperty("method","session"),n.Validators.required],user_profile_enabled:[e.getSettingsProperty("user_profile_enabled",!1)],user_profile_entity:[e.getSettingsProperty("user_profile_entity",null)],email_verification:[e.getSettingsProperty("email_verification",!1)],email_addon:[e.getSettingsProperty("email_addon",!1)]}),e.entities=t.entities.filter(function(t){return!t.fromAddon}),e.emailAddons=t.addons.filter(function(t){return"@materia/sendgrid"===t["package"]||"@materia/mailjet"===t["package"]}),0===e.emailAddons.length&&(e.loginForm.get("email_verification").disable(),e.loginForm.get("email_addon").disable()),e.settings&&e.settings.email_verification||e.loginForm.get("email_addon").disable(),e.settings&&e.settings.user_profile_enabled||e.loginForm.get("user_profile_entity").disable(),0===e.entities.length&&(e.loginForm.get("user_profile_enabled").setValue(!1),e.loginForm.get("user_profile_entity").setValue(null),e.loginForm.get("user_profile_enabled").disable(),e.loginForm.get("user_profile_entity").disable()),e.loginForm.get("user_profile_enabled").valueChanges.subscribe(function(t){t?e.loginForm.get("user_profile_entity").enable():e.loginForm.get("user_profile_entity").disable()}),e.loginForm.get("email_verification").valueChanges.subscribe(function(t){t?e.loginForm.get("email_addon").enable():e.loginForm.get("email_addon").disable()})})},t.prototype.finish=function(){this.loginForm.valid&&this.save.emit(this.loginForm.value)},t.prototype.close=function(){this.cancel.emit()},t.decorators=[{type:a.Component,args:[{selector:"materia-user-management-setup",template:'<form *ngIf="loginForm" [formGroup]="loginForm" style="max-width: 400px">\n\t<h2 mat-dialog-title fxLayout="row">\n\t\t<span fxFlex style="position: relative; top: 3px; left: 5px;">User Management - Setup</span>\n\t\t<button (click)="close()" tabindex="-1" mat-icon-button>\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</h2>\n\t<mat-dialog-content>\n\t\t<div fxLayout="column">\n\t\t\t<h3>\n\t\t\t\tAuthentication method\n\t\t\t</h3>\n\t\t\t<mat-radio-group formControlName="method" fxLayout="column">\n\t\t\t\t<mat-radio-button value="token">Token based authentication (mobile ready)</mat-radio-button>\n\t\t\t\t<mat-radio-button value="session">Session based authentication</mat-radio-button>\n\t\t\t</mat-radio-group>\n\t\t\t\n\t\t\t<h3>\n\t\t\t\t<mat-checkbox formControlName="user_profile_enabled">User profile</mat-checkbox>\n\t\t\t</h3>\n\t\t\t<mat-form-field *ngIf="entities && entities.length > 0; else noEntities">\n\t\t\t\t<mat-select placeholder="Select the user profile entity" formControlName="user_profile_entity">\n\t\t\t\t\t<mat-option *ngFor="let e of entities" [value]="e.name">{{ e.name }}</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<ng-template #noEntities>\n\t\t\t\t<div class="warning">\n\t\t\t\t\tNo entity found. You need an entity to add custom fields to your users.\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t\n\t\t\t<h3>\n\t\t\t\t<mat-checkbox formControlName="email_verification">Emails enabled</mat-checkbox>\n\t\t\t</h3>\n\n\t\t\t<mat-form-field *ngIf="emailAddons && emailAddons.length > 0; else noEmailAddon">\n\t\t\t\t<mat-select placeholder="Select your emailing addon" formControlName="email_addon">\n\t\t\t\t\t<mat-option *ngFor="let e of emailAddons" [value]="e.package">{{ e.name }}</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<ng-template #noEmailAddon>\n\t\t\t\t<div class="warning">You need\n\t\t\t\t\t<strong>Sendgrid</strong> or\n\t\t\t\t\t<strong>Mailjet</strong> addon installed\n\t\t\t\t\t<br>to send email from your Materia Application such as a signup email</div>\n\t\t\t</ng-template>\n\t\t</div>\n\t</mat-dialog-content>\n\t<mat-dialog-actions>\n\t\t<button mat-raised-button color="primary" (click)="finish()">Save</button>\n\t\t<button mat-raised-button (click)="close()">Cancel</button>\n\t</mat-dialog-actions>\n</form>',styles:["mat-form-field{width:100%;margin:0 5px}.mat-dialog-content{margin:0;padding:0 24px}.mat-dialog-actions{padding:12px 24px}h3{margin-top:16px;margin-bottom:8px}.warning{margin:16px 0;padding:8px;border:1px solid #f44336;color:#f44336}"],providers:[n.FormBuilder]}]}],t.ctorParameters=function(){return[{type:n.FormBuilder},{type:o.HttpClient}]},t.propDecorators={app:[{type:a.Input}],settings:[{type:a.Input}],baseUrl:[{type:a.Input}],token:[{type:a.Input}],save:[{type:a.Output}],cancel:[{type:a.Output}]},t=l([i.AddonSetup("@materia/users"),m("design:paramtypes",[n.FormBuilder,o.HttpClient])],t)}(),c=Object.freeze({text:"text",number:"text",date:"date","float":"text","boolean":"switch"}),g=function(){function t(){this.showAsterisk=!0,this.showCheckbox=!0,this.changed=new a.EventEmitter}return Object.defineProperty(t.prototype,"requiredError",{get:function(){return this.form.get(this.param.name)&&this.form.get(this.param.name).hasError("required")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"checkboxName",{get:function(){return this.param.name+"_check"},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var e=this;this.type=this.param.type,this.label||(this.label=this.param.name,this.param.required&&this.showAsterisk&&(this.label+="*")),this.param&&this.param.component?"input"===this.param.component?"text"===this.param.type||"string"===this.param.type?this.actualComponent="text":"number"===this.param.type?this.actualComponent="number":this.actualComponent=this.param.component:"datePicker"===this.param.component?this.actualComponent="date":"timePicker"===this.param.component?this.actualComponent="time":"dateTimePicker"===this.param.component?this.actualComponent="datetime-local":this.actualComponent=this.param.component:this.actualComponent=c[this.type],this.showCheckbox&&!this.param.required&&this.form.get(this.param.name).valueChanges.subscribe(function(t){t?e.form.get(e.checkboxName).setValue(!0):e.form.get(e.checkboxName).setValue(!1)})},t.decorators=[{type:a.Component,args:[{selector:"materia-param-input",template:'<div [formGroup]="form" fxLayout="row">\n\t<div fxLayout="row" fxFlex>\n\t\t<mat-checkbox [formControlName]="checkboxName" *ngIf=" ! param.required && showCheckbox && type !== \'boolean\'">\n\t\t</mat-checkbox>\n\t\t<mat-form-field *ngIf="type != \'boolean\' && actualComponent != \'markdown\' && actualComponent != \'article\'" fxFlex>\n\t\t\t<input *ngIf="type != \'boolean\' && type != \'date\' && type != \'float\' && actualComponent != \'textarea\'" tabindex="0" matInput\n\t\t\t [formControlName]="param.name" [placeholder]="label" [type]="actualComponent" />\n\t\t\t<input *ngIf="type == \'float\'" matInput tabindex="0" type="number" step="any" [placeholder]="label" [formControlName]="param.name"\n\t\t\t/>\n\t\t\t<textarea *ngIf="actualComponent == \'textarea\'" tabindex="0" matInput [placeholder]="label" [formControlName]="param.name"></textarea>\n\t\t\t<input *ngIf="type == \'date\'" matInput tabindex="0" [formControlName]="param.name" [matDatepicker]="picker" [placeholder]="param.name">\n\t\t\t<mat-datepicker-toggle *ngIf="type == \'date\'" matSuffix [for]="picker"></mat-datepicker-toggle>\n\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t\t<mat-error *ngIf="requiredError">\n\t\t\t\t{{param.name}} is\n\t\t\t\t<strong>required</strong>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-checkbox *ngIf="type == \'boolean\'" tabindex="0" [formControlName]="param.name" style="top: 0;">{{label}}</mat-checkbox>\n\t\t<div class="markdown" *ngIf="actualComponent == \'markdown\'" fxLayout="column" fxFlex>\n\t\t\t<label>{{label}}</label>\n\t\t\t<textarea tabindex="0" [formControlName]="param.name" simplemde="{spellChecker: false, toolbar: [\'bold\', \'italic\', \'heading\', \'|\', \'quote\', \'unordered-list\', \'ordered-list\', \'|\', \'link\', \'image\', \'table\']}"></textarea>\n\t\t</div>\n\t</div>\n</div>',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={param:[{type:a.Input}],disabled:[{type:a.Input}],form:[{type:a.Input}],label:[{type:a.Input}],showAsterisk:[{type:a.Input}],showCheckbox:[{type:a.Input}],changed:[{type:a.Output}]},t}(),f=function(){function t(t,e){this.http=t,this.form=e,this.hide=new a.EventEmitter,this.save=new a.EventEmitter}return t.prototype.getSettingsProperty=function(t,e){return this.settings&&this.settings[t]||e},t.prototype.ngOnInit=function(){this.emailForm=this.form.group({method:[this.getSettingsProperty("method","session"),n.Validators.required],static_salt:[this.getSettingsProperty("static_salt",""),n.Validators.required],user_profile_enabled:[this.getSettingsProperty("user_profile_enabled","false")],user_profile_entity:[this.getSettingsProperty("user_profile_entity","")],email_verification:[this.getSettingsProperty("email_verification",!1)],email_addon:[this.getSettingsProperty("email_addon",!1)],template_signup:[this.getSettingsProperty("template_signup","")],redirect_signup:[this.getSettingsProperty("redirect_signup","")],subject_signup:[this.getSettingsProperty("subject_signup","")],subject_lost_password:[this.getSettingsProperty("subject_lost_password","")],subject_change_email:[this.getSettingsProperty("subject_change_email","")],template_lost_password:[this.getSettingsProperty("template_lost_password","")],redirect_lost_password:[this.getSettingsProperty("redirect_lost_password","")],template_change_email:[this.getSettingsProperty("template_change_email","")],redirect_change_email:[this.getSettingsProperty("redirect_change_email","")]}),this.refreshTemplates()},t.prototype.refreshTemplates=function(){var e=this;"@materia/mailjet"===this.settings.email_addon?this.http.post(this.baseUrl+"/entities/mailjet_template/queries/list",{limit:1e3}).subscribe(function(t){e.templates=t.data.filter(function(t){return 1!==t.OwnerId}).map(function(t){return{name:t.Name,id:t.ID}})}):"@materia/sendgrid"===this.settings.email_addon&&this.http.post(this.baseUrl+"/entities/sendgrid_template/queries/listTemplates",{}).subscribe(function(t){e.templates=t&&t.data&&t.data})},t.prototype.saveEmailSettings=function(){this.emailForm.valid&&this.save.emit(this.emailForm.value)},t.prototype.cancel=function(){this.hide.emit()},t.decorators=[{type:a.Component,args:[{selector:"materia-user-management-email-settings",template:'<form [formGroup]="emailForm">\n\t<mat-accordion>\n\t\t<mat-expansion-panel #signupPanel [expanded]="true" fxLayout="column">\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\tSignup\n\t\t\t</mat-expansion-panel-header>\n\n\t\t\t<div class="panel-content" fxLayout="column">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder="Subject" formControlName="subject_signup">\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-select placeholder="Template" formControlName="template_signup">\n\t\t\t\t\t\t<mat-option *ngFor="let t of templates" [value]="t.id">{{ t.name }} ({{t.id}})</mat-option>\n\t\t\t\t\t</mat-select>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder="Redirect URL" formControlName="redirect_signup">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</mat-expansion-panel>\n\n\t\t<mat-expansion-panel #changeEmailPanel>\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\tChange email\n\t\t\t</mat-expansion-panel-header>\n\n\t\t\t<div class="panel-content" fxLayout="column">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder="Subject" formControlName="subject_change_email">\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-select placeholder="Template" formControlName="template_change_email">\n\t\t\t\t\t\t<mat-option *ngFor="let t of templates" [value]="t.id">{{ t.name }} ({{t.id}})</mat-option>\n\t\t\t\t\t</mat-select>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder="Redirect URL" formControlName="redirect_change_email">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</mat-expansion-panel>\n\n\t\t<mat-expansion-panel #lostPasswordPanel fxLayout="column">\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\tLost password\n\t\t\t</mat-expansion-panel-header>\n\t\t\t<div class="panel-content" fxLayout="column">\n\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder="Subject" formControlName="subject_lost_password">\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-select placeholder="Template" formControlName="template_lost_password">\n\t\t\t\t\t\t<mat-option *ngFor="let t of templates" [value]="t.id">{{ t.name }} ({{t.id}})</mat-option>\n\t\t\t\t\t</mat-select>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder="Redirect URL" formControlName="redirect_lost_password">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n\t<div style="margin: 16px 0; text-align: center;">\n\t\t<button mat-raised-button color="primary" (click)="saveEmailSettings()" style="margin-right: 8px">Save</button>\n\t\t<button mat-raised-button (click)="hide.emit()">Cancel</button>\n\t</div>\n</form>',styles:[".panel-content{margin:0 24px!important}"]}]}],t.ctorParameters=function(){return[{type:o.HttpClient},{type:n.FormBuilder}]},t.propDecorators={settings:[{type:a.Input}],baseUrl:[{type:a.Input}],hide:[{type:a.Output}],save:[{type:a.Output}],signupPanel:[{type:a.ViewChild,args:["signupPanel"]}],changeEmailPanel:[{type:a.ViewChild,args:["changeEmailPanel"]}],lostPasswordPanel:[{type:a.ViewChild,args:["lostPasswordPanel"]}]},t}(),h=function(){function t(){}return t.decorators=[{type:a.NgModule,args:[{imports:[r.CommonModule,n.FormsModule,n.ReactiveFormsModule,o.HttpClientModule,s.FlexLayoutModule,e.MatRippleModule,e.MatButtonModule,e.MatSnackBarModule,e.MatCardModule,e.MatIconModule,e.MatDialogModule,e.MatInputModule,e.MatTooltipModule,e.MatCheckboxModule,e.MatSelectModule,e.MatToolbarModule,e.MatDatepickerModule,e.MatNativeDateModule,e.MatExpansionModule,e.MatListModule,e.MatRadioModule,e.MatStepperModule,e.MatProgressSpinnerModule],declarations:[u,f,d,p,g],exports:[u],entryComponents:[]}]}],t=l([i.Addon("@materia/users")],t)}();t.UserManagementViewComponent=u,t.UserManagementModule=h,t.ɵb=f,t.ɵd=g,t.ɵa=p,t.ɵc=d,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=materia-users.umd.min.js.map