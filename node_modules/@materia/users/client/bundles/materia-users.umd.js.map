{"version":3,"file":"materia-users.umd.js.map","sources":[null,"ng://@materia/users/signup-form/signup-form.component.ts","ng://@materia/users/user-management/user-management.component.ts","ng://@materia/users/user-management-setup/user-management-setup.component.ts","ng://@materia/users/param-input/param-input.component.ts","ng://@materia/users/emails-settings/email-settings.component.ts","ng://@materia/users/user-management.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewChild,\n  TemplateRef,\n  Input,\n  OnChanges\n} from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'materia-signup-form',\n  template: `<ng-template #template>\n\t<mat-card fxLayout=\"column\">\n\t\t<mat-toolbar>Create a new user</mat-toolbar>\n\t\n\t\t<form [formGroup]=\"signupForm\" fxLayout=\"column\" style=\"padding: 24px;\">\n\t\t\t<mat-form-field>\n\t\t\t\t<input formControlName=\"email\" matInput placeholder=\"Email\" required type=\"email\" name=\"email\">\n\t\t\t</mat-form-field>\n\t\n\t\t\t<mat-form-field>\n\t\t\t\t<input formControlName=\"password\" matInput placeholder=\"Password\" required type=\"password\" name=\"password\">\n\t\t\t</mat-form-field>\n\t\t\t<div *ngIf=\"profileFields.length > 0\">\n\t\t\t\t<materia-param-input [showCheckbox]=\"false\" [form]=\"signupForm\" [param]=\"param\" *ngFor=\"let param of profileFields\"></materia-param-input>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button (click)=\"signup.emit(signupForm.value)\" mat-raised-button color=\"primary\">Create</button>\n\t\t\t\t<button (click)=\"cancel.emit()\" mat-raised-button>Cancel</button>\n\t\t\t</div>\n\t\t</form>\n\t</mat-card>\n</ng-template>`,\n  styles: [`mat-card{width:300px;margin:0p;padding:0}`]\n})\nexport class SignupFormComponent implements OnInit, OnChanges {\n  @Output() signup: EventEmitter<any> = new EventEmitter();\n  @Output() cancel: EventEmitter<void> = new EventEmitter();\n\n  @ViewChild('template') template: TemplateRef<any>;\n\n  signupForm: FormGroup;\n\n  @Input() profileFields: any;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnChanges(changes) {\n    if (changes.profileFields && changes.profileFields.currentValue) {\n      this.initForm();\n    }\n  }\n  private initForm() {\n    this.signupForm = this.fb.group(Object.assign({}, {\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    }, this.getProfileFormGroup()));\n  }\n\n  private getProfileFormGroup() {\n    if (! this.profileFields) { return {}; }\n    const result: any = {};\n    this.profileFields.forEach(field => {\n      if (field.required) {\n        result[field.name] = ['', Validators.required];\n      } else {\n        result[field.name] = '';\n      }\n    });\n    return result;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  signupClick() {\n    this.signup.emit(this.signupForm.value);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild\n} from '@angular/core';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { AddonView } from '@materia/addons';\nimport { HttpClient } from '@angular/common/http';\n\nimport { SignupFormComponent } from '../signup-form/signup-form.component';\n\nexport interface User {\n  email: string;\n  gravatar: string;\n  name: string;\n}\n@AddonView('@materia/users')\n@Component({\n  selector: 'materia-user-management',\n  template: `<div fxLayout=\"column\" fxFlex>\n\t<div *ngIf=\"me\" style=\"padding: 8px 16px; background-color: #4CAF50; color: white;\">\n\t\tCurrently connected as {{me.email}} (<a style=\"text-decoration: underline; cursor: pointer;\" (click)=\"logout()\">Logout</a>)\n\t</div>\n\t<div fxLayout=\"row\" fxFlex>\n\t\t<mat-card fxLayout=\"column\" fxFlex *ngIf=\"!loading; else loadingUsers\">\n\t\t\t<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\t\t\t\t<mat-icon>people</mat-icon>\n\t\t\t\t<span>\n\t\t\t\t\tUsers\n\t\t\t\t</span>\n\t\t\t\t<span fxFlex></span>\n\t\t\t\t<button *ngIf=\"!displayEmailSettings && settings.email_verification && settings.email_addon\" style=\"margin-right: 8px;\" (click)=\"configureEmails()\" mat-button>Configure emails</button>\n\t\t\t\t<button mat-mini-fab (click)=\"openSignupDialog()\" matTooltip=\"New User\" matTooltipPosition=\"left\" style=\"width: 31px; height: 31px;\">\n\t\t\t\t\t<mat-icon style=\"position: relative; top: -6px; left: -4px;\">add</mat-icon>\n\t\t\t\t</button>\n\t\t\t</mat-toolbar>\n\t\t\t<div *ngIf=\"users && users.length; else noUser\" style=\"border-top: 1px solid #EEE; overflow-y: auto;\" fxLayout=\"column\" fxFlex>\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let user of users\" style=\"border-bottom: 1px solid #EEE; cursor: pointer;min-height: 40px\">\n\t\t\t\t\t<img [src]=\"user.gravatar\" class=\"avatar\" style=\"margin: 0 8px; width:32px; height:32px;border-radius: 100%\" />\n\t\t\t\t\t<div style=\"color: #999; padding-top: 0\">{{user.email}}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ng-template #noUser>\n\t\t\t\t<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"no-users\">\n\t\t\t\t\t<span>There is no users registered yet</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button (click)=\"openSignupDialog()\" mat-raised-button color=\"primary\" [style.margin]=\"'15px'\" [style.color]=\"'white'\">Create\n\t\t\t\t\t\t\ta user</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t</mat-card>\n\t\t<ng-template #loadingUsers>\n\t\t\t<mat-card fxLayout=\"column\" fxFlex fxLayoutAlign=\"center center\">\n\t\t\t\t<mat-spinner></mat-spinner>\n\t\t\t</mat-card>\n\t\t</ng-template>\n\t\t<div style=\"margin: 8px;\" *ngIf=\"displayEmailSettings\" fxLayout=\"column\" fxFlex>\n\t\t\t<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\t\t\t\t<button mat-icon-button (click)=\"hideEmailSettings()\" matTooltip=\"Hide email settings\" matTooltipPosition=\"right\">\n\t\t\t\t\t<mat-icon>arrow_back</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<mat-icon>mail</mat-icon>\n\t\t\t\t<span>\n\t\t\t\t\tEmails\n\t\t\t\t</span>\n\t\t\t\t<span fxFlex></span>\n\t\t\t</mat-toolbar>\n\t\t\t<materia-user-management-email-settings [settings]=\"settings\" [baseUrl]=\"baseUrl\"\n\t\t\t\t(hide)=\"hideEmailSettings()\" (save)=\"saveEmailSettings($event)\" fxFlex style=\"overflow-y: auto;\">\n\t\t\t</materia-user-management-email-settings>\n\t\t</div>\n\t</div>\n</div>\n<materia-signup-form #signupFormTemplate [profileFields]=\"profileFields\" (signup)=\"signup($event)\" (cancel)=\"closeSignupDialog()\"></materia-signup-form>`,\n  styles: [`:host{flex:1 1 0}mat-card{margin:8px;padding:0}mat-icon{margin:2px 8px}.no-users{font-style:italic}`],\n  providers: []\n})\nexport class UserManagementViewComponent implements OnInit {\n  @Input()\n  app;\n  @Input()\n  settings;\n\n  @Input()\n  baseUrl;\n  @Input()\n  apiUrl;\n\n  @Output()\n  openSetup = new EventEmitter<void>();\n\n  @ViewChild(SignupFormComponent)\n  signupDialogComp: SignupFormComponent;\n\n  loading = true;\n  me: any;\n  users: User[] = [];\n  nbUsers = 0;\n  signupDialog: MatDialogRef<any>;\n  profileFields: any[];\n  displayEmailSettings: boolean;\n\n  constructor(\n    private dialog: MatDialog,\n    private http: HttpClient,\n    private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.refreshList();\n    this.refreshConnectedUser();\n    this.getProfileParams();\n  }\n\n  getProfileParams() {\n    if (\n      this.settings &&\n      this.settings.user_profile_enabled &&\n      this.settings.user_profile_entity\n    ) {\n      return this.http\n        .get<any>(`${this.baseUrl}/infos`)\n        .toPromise()\n        .then(res => {\n          const profileEntity = res.entities.find(\n            entity => entity.name === this.settings.user_profile_entity\n          );\n          this.profileFields = profileEntity.fields.filter(\n            field =>\n              field.name !== 'id_user' &&\n              (!field.primary || (field.primary && !field.autoIncrement))\n          );\n        })\n        .catch(e => {\n          this.profileFields = [];\n        });\n    } else {\n      this.profileFields = [];\n      return Promise.resolve();\n    }\n  }\n\n  refreshList() {\n    this.loading = true;\n    this.http\n      .post<any>(`${this.baseUrl}/entities/user/queries/listWithGravatar`, {})\n      .subscribe(res => {\n        this.users = res.data;\n        this.nbUsers = res.count;\n        this.loading = false;\n      });\n  }\n\n  refreshConnectedUser() {\n    this.http.get<any>(`${this.apiUrl}/user/me`).subscribe(\n      res => {\n        this.me = res;\n      },\n      () => (this.me = null)\n    );\n  }\n\n  configureEmails() {\n    this.displayEmailSettings = true;\n  }\n  hideEmailSettings() {\n    this.displayEmailSettings = false;\n  }\n  openSignupDialog() {\n    this.signupDialog = this.dialog.open(this.signupDialogComp.template, {\n      panelClass: 'no-padding'\n    });\n  }\n\n  saveEmailSettings(settings) {\n    this.http\n      .post<any>(`${this.baseUrl}/addons/@materia/users/setup`, settings)\n      .subscribe(res => {\n        this.snackbar.open('Settings saved!', null, {\n          duration: 3000\n        });\n        this.hideEmailSettings();\n        this.settings = settings;\n      });\n  }\n\n  closeSignupDialog() {\n    this.signupDialog.close();\n  }\n\n  signup(user) {\n    this.http.post<any>(`${this.apiUrl}/user/signup`, user).subscribe(() => {\n      this.closeSignupDialog();\n      this.refreshList();\n      this.refreshConnectedUser();\n    });\n  }\n\n  logout() {\n    this.http.post<any>(`${this.apiUrl}/user/logout`, {}).subscribe(\n      () => {\n        this.refreshConnectedUser();\n      },\n      () => this.refreshConnectedUser()\n    );\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\nimport { AddonSetup } from '@materia/addons';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface IUserManagementSetup {\n  method: string;\n  user_profile_enabled: boolean;\n  user_profile_entity: string;\n  email_verification: boolean;\n  email_addon: string;\n}\n\n@AddonSetup('@materia/users')\n@Component({\n  selector: 'materia-user-management-setup',\n  template: `<form *ngIf=\"loginForm\" [formGroup]=\"loginForm\" style=\"max-width: 400px\">\n\t<h2 mat-dialog-title fxLayout=\"row\">\n\t\t<span fxFlex style=\"position: relative; top: 3px; left: 5px;\">User Management - Setup</span>\n\t\t<button (click)=\"close()\" tabindex=\"-1\" mat-icon-button>\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</h2>\n\t<mat-dialog-content>\n\t\t<div fxLayout=\"column\">\n\t\t\t<h3>\n\t\t\t\tAuthentication method\n\t\t\t</h3>\n\t\t\t<mat-radio-group formControlName=\"method\" fxLayout=\"column\">\n\t\t\t\t<mat-radio-button value=\"token\">Token based authentication (mobile ready)</mat-radio-button>\n\t\t\t\t<mat-radio-button value=\"session\">Session based authentication</mat-radio-button>\n\t\t\t</mat-radio-group>\n\t\t\t\n\t\t\t<h3>\n\t\t\t\t<mat-checkbox formControlName=\"user_profile_enabled\">User profile</mat-checkbox>\n\t\t\t</h3>\n\t\t\t<mat-form-field *ngIf=\"entities && entities.length > 0; else noEntities\">\n\t\t\t\t<mat-select placeholder=\"Select the user profile entity\" formControlName=\"user_profile_entity\">\n\t\t\t\t\t<mat-option *ngFor=\"let e of entities\" [value]=\"e.name\">{{ e.name }}</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<ng-template #noEntities>\n\t\t\t\t<div class=\"warning\">\n\t\t\t\t\tNo entity found. You need an entity to add custom fields to your users.\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t\n\t\t\t<h3>\n\t\t\t\t<mat-checkbox formControlName=\"email_verification\">Emails enabled</mat-checkbox>\n\t\t\t</h3>\n\n\t\t\t<mat-form-field *ngIf=\"emailAddons && emailAddons.length > 0; else noEmailAddon\">\n\t\t\t\t<mat-select placeholder=\"Select your emailing addon\" formControlName=\"email_addon\">\n\t\t\t\t\t<mat-option *ngFor=\"let e of emailAddons\" [value]=\"e.package\">{{ e.name }}</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<ng-template #noEmailAddon>\n\t\t\t\t<div class=\"warning\">You need\n\t\t\t\t\t<strong>Sendgrid</strong> or\n\t\t\t\t\t<strong>Mailjet</strong> addon installed\n\t\t\t\t\t<br>to send email from your Materia Application such as a signup email</div>\n\t\t\t</ng-template>\n\t\t</div>\n\t</mat-dialog-content>\n\t<mat-dialog-actions>\n\t\t<button mat-raised-button color=\"primary\" (click)=\"finish()\">Save</button>\n\t\t<button mat-raised-button (click)=\"close()\">Cancel</button>\n\t</mat-dialog-actions>\n</form>`,\n  styles: [`mat-form-field{width:100%;margin:0 5px}.mat-dialog-content{margin:0;padding:0 24px}.mat-dialog-actions{padding:12px 24px}h3{margin-top:16px;margin-bottom:8px}.warning{margin:16px 0;padding:8px;border:1px solid #f44336;color:#f44336}`],\n  providers: [FormBuilder]\n})\nexport class UserManagementSetupComponent implements OnInit {\n  @Input() app;\n  @Input() settings: IUserManagementSetup;\n  @Input() baseUrl: string;\n  @Input() token: string;\n  @Output() save = new EventEmitter<IUserManagementSetup>();\n  @Output() cancel = new EventEmitter<void>();\n\n  loginForm: FormGroup;\n  entities: any[];\n  emailAddons = [];\n\n  constructor(private fb: FormBuilder, private http: HttpClient) {}\n\n  private getSettingsProperty(property, defaultValue) {\n    return (this.settings && this.settings[property]) || defaultValue;\n  }\n\n  ngOnInit() {\n    this.http\n      .get<any>(this.baseUrl + '/infos')\n      .toPromise()\n      .then(res => {\n        this.loginForm = this.fb.group({\n          method: [\n            this.getSettingsProperty('method', 'session'),\n            Validators.required\n          ],\n          user_profile_enabled: [\n            this.getSettingsProperty('user_profile_enabled', false)\n          ],\n          user_profile_entity: [\n            this.getSettingsProperty('user_profile_entity', null)\n          ],\n          email_verification: [\n            this.getSettingsProperty('email_verification', false)\n          ],\n          email_addon: [this.getSettingsProperty('email_addon', false)],\n        });\n        this.entities = res.entities.filter(entity => ! entity.fromAddon);\n        this.emailAddons = res.addons.filter(\n          addon =>\n            addon.package === '@materia/sendgrid' ||\n            addon.package === '@materia/mailjet'\n        );\n\n        if (this.emailAddons.length === 0) {\n          this.loginForm.get('email_verification').disable();\n          this.loginForm.get('email_addon').disable();\n        }\n\n        if ( ! this.settings || ! this.settings.email_verification) {\n          this.loginForm.get('email_addon').disable();\n        }\n\n        if ( ! this.settings || ! this.settings.user_profile_enabled) {\n          this.loginForm.get('user_profile_entity').disable();\n        }\n\n        if (this.entities.length === 0) {\n          this.loginForm.get('user_profile_enabled').setValue(false);\n          this.loginForm.get('user_profile_entity').setValue(null);\n          this.loginForm.get('user_profile_enabled').disable();\n          this.loginForm.get('user_profile_entity').disable();\n        }\n        this.loginForm\n          .get('user_profile_enabled')\n          .valueChanges.subscribe(val => {\n            if (val) {\n              this.loginForm.get('user_profile_entity').enable();\n            } else {\n              this.loginForm.get('user_profile_entity').disable();\n            }\n          });\n\n        this.loginForm.get('email_verification').valueChanges.subscribe(val => {\n          if (val) {\n            this.loginForm.get('email_addon').enable();\n          } else {\n            this.loginForm.get('email_addon').disable();\n          }\n        });\n      });\n  }\n\n  finish() {\n    if (this.loginForm.valid) {\n      this.save.emit(this.loginForm.value);\n    }\n  }\n\n  close() {\n    this.cancel.emit();\n  }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { FormGroup } from '@angular/forms';\n\nconst DefaultComponent = Object.freeze({\n  text: 'text',\n  number: 'text',\n  date: 'date',\n  float: 'text',\n  boolean: 'switch'\n});\n\n@Component({\n  selector: 'materia-param-input',\n  template: `<div [formGroup]=\"form\" fxLayout=\"row\">\n\t<div fxLayout=\"row\" fxFlex>\n\t\t<mat-checkbox [formControlName]=\"checkboxName\" *ngIf=\" ! param.required && showCheckbox && type !== 'boolean'\">\n\t\t</mat-checkbox>\n\t\t<mat-form-field *ngIf=\"type != 'boolean' && actualComponent != 'markdown' && actualComponent != 'article'\" fxFlex>\n\t\t\t<input *ngIf=\"type != 'boolean' && type != 'date' && type != 'float' && actualComponent != 'textarea'\" tabindex=\"0\" matInput\n\t\t\t [formControlName]=\"param.name\" [placeholder]=\"label\" [type]=\"actualComponent\" />\n\t\t\t<input *ngIf=\"type == 'float'\" matInput tabindex=\"0\" type=\"number\" step=\"any\" [placeholder]=\"label\" [formControlName]=\"param.name\"\n\t\t\t/>\n\t\t\t<textarea *ngIf=\"actualComponent == 'textarea'\" tabindex=\"0\" matInput [placeholder]=\"label\" [formControlName]=\"param.name\"></textarea>\n\t\t\t<input *ngIf=\"type == 'date'\" matInput tabindex=\"0\" [formControlName]=\"param.name\" [matDatepicker]=\"picker\" [placeholder]=\"param.name\">\n\t\t\t<mat-datepicker-toggle *ngIf=\"type == 'date'\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t\t<mat-error *ngIf=\"requiredError\">\n\t\t\t\t{{param.name}} is\n\t\t\t\t<strong>required</strong>\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-checkbox *ngIf=\"type == 'boolean'\" tabindex=\"0\" [formControlName]=\"param.name\" style=\"top: 0;\">{{label}}</mat-checkbox>\n\t\t<div class=\"markdown\" *ngIf=\"actualComponent == 'markdown'\" fxLayout=\"column\" fxFlex>\n\t\t\t<label>{{label}}</label>\n\t\t\t<textarea tabindex=\"0\" [formControlName]=\"param.name\" simplemde=\"{spellChecker: false, toolbar: ['bold', 'italic', 'heading', '|', 'quote', 'unordered-list', 'ordered-list', '|', 'link', 'image', 'table']}\"></textarea>\n\t\t</div>\n\t</div>\n</div>`,\n  styles: [``]\n})\nexport class ParamInputComponent implements OnInit {\n  @Input() param: any;\n  @Input() disabled: boolean;\n\n  @Input() form: FormGroup;\n  @Input() label: string;\n\n  @Input() showAsterisk = true;\n  @Input() showCheckbox = true;\n\n  type: string;\n  actualComponent: string;\n\n  @Output() changed = new EventEmitter<any>();\n\n  get requiredError() {\n    return (\n      this.form.get(this.param.name) &&\n      this.form.get(this.param.name).hasError('required')\n    );\n  }\n\n  get checkboxName() {\n    return `${this.param.name}_check`;\n  }\n\n  constructor() {}\n\n  ngOnInit() {\n    this.type = this.param.type;\n\n    if (!this.label) {\n      this.label = this.param.name;\n      if (this.param.required && this.showAsterisk) {\n        this.label += '*';\n      }\n    }\n\n    if (this.param && this.param.component) {\n      if (this.param.component === 'input') {\n        if (this.param.type === 'text' || this.param.type === 'string') {\n          this.actualComponent = 'text';\n        } else if (this.param.type === 'number') {\n          this.actualComponent = 'number';\n        } else {\n          this.actualComponent = this.param.component;\n        }\n      } else {\n        if (this.param.component === 'datePicker') {\n          this.actualComponent = 'date';\n        } else if (this.param.component === 'timePicker') {\n          this.actualComponent = 'time';\n        } else if (this.param.component === 'dateTimePicker') {\n          this.actualComponent = 'datetime-local';\n        } else {\n          this.actualComponent = this.param.component;\n        }\n      }\n    } else {\n      this.actualComponent = DefaultComponent[this.type];\n    }\n\n    if (this.showCheckbox && !this.param.required) {\n      this.form.get(this.param.name).valueChanges.subscribe(val => {\n        if (val) {\n          this.form.get(this.checkboxName).setValue(true);\n        } else {\n          this.form.get(this.checkboxName).setValue(false);\n        }\n      });\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatExpansionPanel } from '@angular/material';\n\n@Component({\n  selector: 'materia-user-management-email-settings',\n  template: `<form [formGroup]=\"emailForm\">\n\t<mat-accordion>\n\t\t<mat-expansion-panel #signupPanel [expanded]=\"true\" fxLayout=\"column\">\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\tSignup\n\t\t\t</mat-expansion-panel-header>\n\n\t\t\t<div class=\"panel-content\" fxLayout=\"column\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder=\"Subject\" formControlName=\"subject_signup\">\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-select placeholder=\"Template\" formControlName=\"template_signup\">\n\t\t\t\t\t\t<mat-option *ngFor=\"let t of templates\" [value]=\"t.id\">{{ t.name }} ({{t.id}})</mat-option>\n\t\t\t\t\t</mat-select>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder=\"Redirect URL\" formControlName=\"redirect_signup\">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</mat-expansion-panel>\n\n\t\t<mat-expansion-panel #changeEmailPanel>\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\tChange email\n\t\t\t</mat-expansion-panel-header>\n\n\t\t\t<div class=\"panel-content\" fxLayout=\"column\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder=\"Subject\" formControlName=\"subject_change_email\">\n\t\t\t\t</mat-form-field>\n\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-select placeholder=\"Template\" formControlName=\"template_change_email\">\n\t\t\t\t\t\t<mat-option *ngFor=\"let t of templates\" [value]=\"t.id\">{{ t.name }} ({{t.id}})</mat-option>\n\t\t\t\t\t</mat-select>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder=\"Redirect URL\" formControlName=\"redirect_change_email\">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</mat-expansion-panel>\n\n\t\t<mat-expansion-panel #lostPasswordPanel fxLayout=\"column\">\n\t\t\t<mat-expansion-panel-header>\n\t\t\t\tLost password\n\t\t\t</mat-expansion-panel-header>\n\t\t\t<div class=\"panel-content\" fxLayout=\"column\">\n\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder=\"Subject\" formControlName=\"subject_lost_password\">\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-select placeholder=\"Template\" formControlName=\"template_lost_password\">\n\t\t\t\t\t\t<mat-option *ngFor=\"let t of templates\" [value]=\"t.id\">{{ t.name }} ({{t.id}})</mat-option>\n\t\t\t\t\t</mat-select>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<input matInput placeholder=\"Redirect URL\" formControlName=\"redirect_lost_password\">\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t</mat-expansion-panel>\n\t</mat-accordion>\n\t<div style=\"margin: 16px 0; text-align: center;\">\n\t\t<button mat-raised-button color=\"primary\" (click)=\"saveEmailSettings()\" style=\"margin-right: 8px\">Save</button>\n\t\t<button mat-raised-button (click)=\"hide.emit()\">Cancel</button>\n\t</div>\n</form>`,\n  styles: [`.panel-content{margin:0 24px!important}`]\n})\nexport class EmailSettingsComponent implements OnInit {\n  @Input()\n  settings: any;\n  @Input()\n  baseUrl: string;\n\n  emailForm: FormGroup;\n  templates: Array<{ name: string; id: number }>;\n\n  @Output()\n  hide = new EventEmitter<void>();\n  @Output()\n  save = new EventEmitter<any>();\n\n  @ViewChild('signupPanel')\n  signupPanel: MatExpansionPanel;\n  @ViewChild('changeEmailPanel')\n  changeEmailPanel: MatExpansionPanel;\n  @ViewChild('lostPasswordPanel')\n  lostPasswordPanel: MatExpansionPanel;\n\n  constructor(private http: HttpClient, private form: FormBuilder) {}\n\n  private getSettingsProperty(property, defaultValue) {\n    return (this.settings && this.settings[property]) || defaultValue;\n  }\n  ngOnInit(): void {\n    this.emailForm = this.form.group({\n      method: [\n        this.getSettingsProperty('method', 'session'),\n        Validators.required\n      ],\n      static_salt: [\n        this.getSettingsProperty('static_salt', ''),\n        Validators.required\n      ],\n      user_profile_enabled: [\n        this.getSettingsProperty('user_profile_enabled', 'false')\n      ],\n      user_profile_entity: [\n        this.getSettingsProperty('user_profile_entity', '')\n      ],\n      email_verification: [\n        this.getSettingsProperty('email_verification', false)\n      ],\n      email_addon: [this.getSettingsProperty('email_addon', false)],\n      template_signup: [this.getSettingsProperty('template_signup', '')],\n      redirect_signup: [this.getSettingsProperty('redirect_signup', '')],\n      subject_signup: [this.getSettingsProperty('subject_signup', '')],\n      subject_lost_password: [this.getSettingsProperty('subject_lost_password', '')],\n      subject_change_email: [this.getSettingsProperty('subject_change_email', '')],\n      template_lost_password: [\n        this.getSettingsProperty('template_lost_password', '')\n      ],\n      redirect_lost_password: [\n        this.getSettingsProperty('redirect_lost_password', '')\n      ],\n      template_change_email: [\n        this.getSettingsProperty('template_change_email', '')\n      ],\n      redirect_change_email: [\n        this.getSettingsProperty('redirect_change_email', '')\n      ]\n    });\n\n    this.refreshTemplates();\n  }\n\n  refreshTemplates() {\n    if (this.settings.email_addon === '@materia/mailjet') {\n      this.http\n        .post<any>(`${this.baseUrl}/entities/mailjet_template/queries/list`, {limit: 1000})\n        .subscribe(data => {\n          this.templates = data.data\n            .filter(row => row.OwnerId !== 1)\n            .map(row => {\n              return {\n                name: row.Name,\n                id: row.ID\n              };\n            });\n        });\n    } else if (this.settings.email_addon === '@materia/sendgrid') {\n      this.http\n        .post<any>(\n          `${this.baseUrl}/entities/sendgrid_template/queries/listTemplates`,\n          {}\n        )\n        .subscribe(data => {\n          this.templates = data && data.data && data.data;\n          // TODO...\n        });\n    }\n  }\n  saveEmailSettings() {\n    if (this.emailForm.valid) {\n      this.save.emit(this.emailForm.value);\n    }\n  }\n  cancel() {\n    this.hide.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {\n  MatButtonModule,\n  MatRippleModule,\n  MatSnackBarModule,\n  MatCardModule,\n  MatIconModule,\n  MatDialogModule,\n  MatInputModule,\n  MatListModule,\n  MatTooltipModule,\n  MatToolbarModule,\n  MatDatepickerModule,\n  MatExpansionModule,\n  MatNativeDateModule,\n  MatRadioModule,\n  MatStepperModule,\n  MatSelectModule,\n  MatCheckboxModule,\n  MatProgressSpinnerModule\n} from '@angular/material';\n\nimport { Addon } from '@materia/addons';\n\nimport { UserManagementViewComponent } from './user-management/user-management.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { UserManagementSetupComponent } from './user-management-setup/user-management-setup.component';\nimport { ParamInputComponent } from './param-input/param-input.component';\nimport { EmailSettingsComponent } from './emails-settings/email-settings.component';\n\n@Addon('@materia/users')\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    MatRippleModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatIconModule,\n    MatDialogModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatExpansionModule,\n    MatListModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [\n    UserManagementViewComponent,\n    EmailSettingsComponent,\n    UserManagementSetupComponent,\n    SignupFormComponent,\n    ParamInputComponent\n  ],\n  exports: [UserManagementViewComponent],\n  entryComponents: []\n})\nexport class UserManagementModule {}\n"],"names":["EventEmitter","Validators","Component","FormBuilder","Output","ViewChild","Input","http","MatDialog","HttpClient","MatSnackBar","AddonView","AddonSetup","NgModule","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","FlexLayoutModule","MatRippleModule","MatButtonModule","MatSnackBarModule","MatCardModule","MatIconModule","MatDialogModule","MatInputModule","MatTooltipModule","MatCheckboxModule","MatSelectModule","MatToolbarModule","MatDatepickerModule","MatNativeDateModule","MatExpansionModule","MatListModule","MatRadioModule","MatStepperModule","MatProgressSpinnerModule","Addon"],"mappings":"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"}
