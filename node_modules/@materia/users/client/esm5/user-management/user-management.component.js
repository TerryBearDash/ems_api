/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { MatDialog, MatSnackBar } from '@angular/material';
import { AddonView } from '@materia/addons';
import { HttpClient } from '@angular/common/http';
import { SignupFormComponent } from '../signup-form/signup-form.component';
/**
 * @record
 */
export function User() { }
function User_tsickle_Closure_declarations() {
    /** @type {?} */
    User.prototype.email;
    /** @type {?} */
    User.prototype.gravatar;
    /** @type {?} */
    User.prototype.name;
}
var UserManagementViewComponent = /** @class */ (function () {
    function UserManagementViewComponent(dialog, http, snackbar) {
        this.dialog = dialog;
        this.http = http;
        this.snackbar = snackbar;
        this.openSetup = new EventEmitter();
        this.loading = true;
        this.users = [];
        this.nbUsers = 0;
    }
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.refreshList();
        this.refreshConnectedUser();
        this.getProfileParams();
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.getProfileParams = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.settings &&
            this.settings.user_profile_enabled &&
            this.settings.user_profile_entity) {
            return this.http
                .get(this.baseUrl + "/infos")
                .toPromise()
                .then(function (res) {
                var /** @type {?} */ profileEntity = res.entities.find(function (entity) { return entity.name === _this.settings.user_profile_entity; });
                _this.profileFields = profileEntity.fields.filter(function (field) {
                    return field.name !== 'id_user' &&
                        (!field.primary || (field.primary && !field.autoIncrement));
                });
            })
                .catch(function (e) {
                _this.profileFields = [];
            });
        }
        else {
            this.profileFields = [];
            return Promise.resolve();
        }
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.refreshList = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.loading = true;
        this.http
            .post(this.baseUrl + "/entities/user/queries/listWithGravatar", {})
            .subscribe(function (res) {
            _this.users = res.data;
            _this.nbUsers = res.count;
            _this.loading = false;
        });
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.refreshConnectedUser = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.http.get(this.apiUrl + "/user/me").subscribe(function (res) {
            _this.me = res;
        }, function () { return (_this.me = null); });
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.configureEmails = /**
     * @return {?}
     */
    function () {
        this.displayEmailSettings = true;
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.hideEmailSettings = /**
     * @return {?}
     */
    function () {
        this.displayEmailSettings = false;
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.openSignupDialog = /**
     * @return {?}
     */
    function () {
        this.signupDialog = this.dialog.open(this.signupDialogComp.template, {
            panelClass: 'no-padding'
        });
    };
    /**
     * @param {?} settings
     * @return {?}
     */
    UserManagementViewComponent.prototype.saveEmailSettings = /**
     * @param {?} settings
     * @return {?}
     */
    function (settings) {
        var _this = this;
        this.http
            .post(this.baseUrl + "/addons/@materia/users/setup", settings)
            .subscribe(function (res) {
            _this.snackbar.open('Settings saved!', null, {
                duration: 3000
            });
            _this.hideEmailSettings();
            _this.settings = settings;
        });
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.closeSignupDialog = /**
     * @return {?}
     */
    function () {
        this.signupDialog.close();
    };
    /**
     * @param {?} user
     * @return {?}
     */
    UserManagementViewComponent.prototype.signup = /**
     * @param {?} user
     * @return {?}
     */
    function (user) {
        var _this = this;
        this.http.post(this.apiUrl + "/user/signup", user).subscribe(function () {
            _this.closeSignupDialog();
            _this.refreshList();
            _this.refreshConnectedUser();
        });
    };
    /**
     * @return {?}
     */
    UserManagementViewComponent.prototype.logout = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.http.post(this.apiUrl + "/user/logout", {}).subscribe(function () {
            _this.refreshConnectedUser();
        }, function () { return _this.refreshConnectedUser(); });
    };
    UserManagementViewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'materia-user-management',
                    template: "<div fxLayout=\"column\" fxFlex>\n\t<div *ngIf=\"me\" style=\"padding: 8px 16px; background-color: #4CAF50; color: white;\">\n\t\tCurrently connected as {{me.email}} (<a style=\"text-decoration: underline; cursor: pointer;\" (click)=\"logout()\">Logout</a>)\n\t</div>\n\t<div fxLayout=\"row\" fxFlex>\n\t\t<mat-card fxLayout=\"column\" fxFlex *ngIf=\"!loading; else loadingUsers\">\n\t\t\t<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\t\t\t\t<mat-icon>people</mat-icon>\n\t\t\t\t<span>\n\t\t\t\t\tUsers\n\t\t\t\t</span>\n\t\t\t\t<span fxFlex></span>\n\t\t\t\t<button *ngIf=\"!displayEmailSettings && settings.email_verification && settings.email_addon\" style=\"margin-right: 8px;\" (click)=\"configureEmails()\" mat-button>Configure emails</button>\n\t\t\t\t<button mat-mini-fab (click)=\"openSignupDialog()\" matTooltip=\"New User\" matTooltipPosition=\"left\" style=\"width: 31px; height: 31px;\">\n\t\t\t\t\t<mat-icon style=\"position: relative; top: -6px; left: -4px;\">add</mat-icon>\n\t\t\t\t</button>\n\t\t\t</mat-toolbar>\n\t\t\t<div *ngIf=\"users && users.length; else noUser\" style=\"border-top: 1px solid #EEE; overflow-y: auto;\" fxLayout=\"column\" fxFlex>\n\t\t\t\t<div fxLayout=\"row\" fxLayoutAlign=\"start center\" *ngFor=\"let user of users\" style=\"border-bottom: 1px solid #EEE; cursor: pointer;min-height: 40px\">\n\t\t\t\t\t<img [src]=\"user.gravatar\" class=\"avatar\" style=\"margin: 0 8px; width:32px; height:32px;border-radius: 100%\" />\n\t\t\t\t\t<div style=\"color: #999; padding-top: 0\">{{user.email}}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ng-template #noUser>\n\t\t\t\t<div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"no-users\">\n\t\t\t\t\t<span>There is no users registered yet</span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button (click)=\"openSignupDialog()\" mat-raised-button color=\"primary\" [style.margin]=\"'15px'\" [style.color]=\"'white'\">Create\n\t\t\t\t\t\t\ta user</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t</mat-card>\n\t\t<ng-template #loadingUsers>\n\t\t\t<mat-card fxLayout=\"column\" fxFlex fxLayoutAlign=\"center center\">\n\t\t\t\t<mat-spinner></mat-spinner>\n\t\t\t</mat-card>\n\t\t</ng-template>\n\t\t<div style=\"margin: 8px;\" *ngIf=\"displayEmailSettings\" fxLayout=\"column\" fxFlex>\n\t\t\t<mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"start center\">\n\t\t\t\t<button mat-icon-button (click)=\"hideEmailSettings()\" matTooltip=\"Hide email settings\" matTooltipPosition=\"right\">\n\t\t\t\t\t<mat-icon>arrow_back</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<mat-icon>mail</mat-icon>\n\t\t\t\t<span>\n\t\t\t\t\tEmails\n\t\t\t\t</span>\n\t\t\t\t<span fxFlex></span>\n\t\t\t</mat-toolbar>\n\t\t\t<materia-user-management-email-settings [settings]=\"settings\" [baseUrl]=\"baseUrl\"\n\t\t\t\t(hide)=\"hideEmailSettings()\" (save)=\"saveEmailSettings($event)\" fxFlex style=\"overflow-y: auto;\">\n\t\t\t</materia-user-management-email-settings>\n\t\t</div>\n\t</div>\n</div>\n<materia-signup-form #signupFormTemplate [profileFields]=\"profileFields\" (signup)=\"signup($event)\" (cancel)=\"closeSignupDialog()\"></materia-signup-form>",
                    styles: [":host{flex:1 1 0}mat-card{margin:8px;padding:0}mat-icon{margin:2px 8px}.no-users{font-style:italic}"],
                    providers: []
                },] },
    ];
    /** @nocollapse */
    UserManagementViewComponent.ctorParameters = function () { return [
        { type: MatDialog, },
        { type: HttpClient, },
        { type: MatSnackBar, },
    ]; };
    UserManagementViewComponent.propDecorators = {
        "app": [{ type: Input },],
        "settings": [{ type: Input },],
        "baseUrl": [{ type: Input },],
        "apiUrl": [{ type: Input },],
        "openSetup": [{ type: Output },],
        "signupDialogComp": [{ type: ViewChild, args: [SignupFormComponent,] },],
    };
    UserManagementViewComponent = tslib_1.__decorate([
        AddonView('@materia/users'),
        tslib_1.__metadata("design:paramtypes", [MatDialog,
            HttpClient,
            MatSnackBar])
    ], UserManagementViewComponent);
    return UserManagementViewComponent;
}());
export { UserManagementViewComponent };
function UserManagementViewComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    UserManagementViewComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    UserManagementViewComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    UserManagementViewComponent.propDecorators;
    /** @type {?} */
    UserManagementViewComponent.prototype.app;
    /** @type {?} */
    UserManagementViewComponent.prototype.settings;
    /** @type {?} */
    UserManagementViewComponent.prototype.baseUrl;
    /** @type {?} */
    UserManagementViewComponent.prototype.apiUrl;
    /** @type {?} */
    UserManagementViewComponent.prototype.openSetup;
    /** @type {?} */
    UserManagementViewComponent.prototype.signupDialogComp;
    /** @type {?} */
    UserManagementViewComponent.prototype.loading;
    /** @type {?} */
    UserManagementViewComponent.prototype.me;
    /** @type {?} */
    UserManagementViewComponent.prototype.users;
    /** @type {?} */
    UserManagementViewComponent.prototype.nbUsers;
    /** @type {?} */
    UserManagementViewComponent.prototype.signupDialog;
    /** @type {?} */
    UserManagementViewComponent.prototype.profileFields;
    /** @type {?} */
    UserManagementViewComponent.prototype.displayEmailSettings;
    /** @type {?} */
    UserManagementViewComponent.prototype.dialog;
    /** @type {?} */
    UserManagementViewComponent.prototype.http;
    /** @type {?} */
    UserManagementViewComponent.prototype.snackbar;
}

//# sourceMappingURL=data:application/json;base64,