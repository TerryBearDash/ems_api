/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Validators, FormBuilder } from '@angular/forms';
import { AddonSetup } from '@materia/addons';
import { HttpClient } from '@angular/common/http';
/**
 * @record
 */
export function IUserManagementSetup() { }
function IUserManagementSetup_tsickle_Closure_declarations() {
    /** @type {?} */
    IUserManagementSetup.prototype.method;
    /** @type {?} */
    IUserManagementSetup.prototype.user_profile_enabled;
    /** @type {?} */
    IUserManagementSetup.prototype.user_profile_entity;
    /** @type {?} */
    IUserManagementSetup.prototype.email_verification;
    /** @type {?} */
    IUserManagementSetup.prototype.email_addon;
}
var UserManagementSetupComponent = /** @class */ (function () {
    function UserManagementSetupComponent(fb, http) {
        this.fb = fb;
        this.http = http;
        this.save = new EventEmitter();
        this.cancel = new EventEmitter();
        this.emailAddons = [];
    }
    /**
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    UserManagementSetupComponent.prototype.getSettingsProperty = /**
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (property, defaultValue) {
        return (this.settings && this.settings[property]) || defaultValue;
    };
    /**
     * @return {?}
     */
    UserManagementSetupComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.http
            .get(this.baseUrl + '/infos')
            .toPromise()
            .then(function (res) {
            _this.loginForm = _this.fb.group({
                method: [
                    _this.getSettingsProperty('method', 'session'),
                    Validators.required
                ],
                user_profile_enabled: [
                    _this.getSettingsProperty('user_profile_enabled', false)
                ],
                user_profile_entity: [
                    _this.getSettingsProperty('user_profile_entity', null)
                ],
                email_verification: [
                    _this.getSettingsProperty('email_verification', false)
                ],
                email_addon: [_this.getSettingsProperty('email_addon', false)],
            });
            _this.entities = res.entities.filter(function (entity) { return !entity.fromAddon; });
            _this.emailAddons = res.addons.filter(function (addon) {
                return addon.package === '@materia/sendgrid' ||
                    addon.package === '@materia/mailjet';
            });
            if (_this.emailAddons.length === 0) {
                _this.loginForm.get('email_verification').disable();
                _this.loginForm.get('email_addon').disable();
            }
            if (!_this.settings || !_this.settings.email_verification) {
                _this.loginForm.get('email_addon').disable();
            }
            if (!_this.settings || !_this.settings.user_profile_enabled) {
                _this.loginForm.get('user_profile_entity').disable();
            }
            if (_this.entities.length === 0) {
                _this.loginForm.get('user_profile_enabled').setValue(false);
                _this.loginForm.get('user_profile_entity').setValue(null);
                _this.loginForm.get('user_profile_enabled').disable();
                _this.loginForm.get('user_profile_entity').disable();
            }
            _this.loginForm
                .get('user_profile_enabled')
                .valueChanges.subscribe(function (val) {
                if (val) {
                    _this.loginForm.get('user_profile_entity').enable();
                }
                else {
                    _this.loginForm.get('user_profile_entity').disable();
                }
            });
            _this.loginForm.get('email_verification').valueChanges.subscribe(function (val) {
                if (val) {
                    _this.loginForm.get('email_addon').enable();
                }
                else {
                    _this.loginForm.get('email_addon').disable();
                }
            });
        });
    };
    /**
     * @return {?}
     */
    UserManagementSetupComponent.prototype.finish = /**
     * @return {?}
     */
    function () {
        if (this.loginForm.valid) {
            this.save.emit(this.loginForm.value);
        }
    };
    /**
     * @return {?}
     */
    UserManagementSetupComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.cancel.emit();
    };
    UserManagementSetupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'materia-user-management-setup',
                    template: "<form *ngIf=\"loginForm\" [formGroup]=\"loginForm\" style=\"max-width: 400px\">\n\t<h2 mat-dialog-title fxLayout=\"row\">\n\t\t<span fxFlex style=\"position: relative; top: 3px; left: 5px;\">User Management - Setup</span>\n\t\t<button (click)=\"close()\" tabindex=\"-1\" mat-icon-button>\n\t\t\t<mat-icon>close</mat-icon>\n\t\t</button>\n\t</h2>\n\t<mat-dialog-content>\n\t\t<div fxLayout=\"column\">\n\t\t\t<h3>\n\t\t\t\tAuthentication method\n\t\t\t</h3>\n\t\t\t<mat-radio-group formControlName=\"method\" fxLayout=\"column\">\n\t\t\t\t<mat-radio-button value=\"token\">Token based authentication (mobile ready)</mat-radio-button>\n\t\t\t\t<mat-radio-button value=\"session\">Session based authentication</mat-radio-button>\n\t\t\t</mat-radio-group>\n\t\t\t\n\t\t\t<h3>\n\t\t\t\t<mat-checkbox formControlName=\"user_profile_enabled\">User profile</mat-checkbox>\n\t\t\t</h3>\n\t\t\t<mat-form-field *ngIf=\"entities && entities.length > 0; else noEntities\">\n\t\t\t\t<mat-select placeholder=\"Select the user profile entity\" formControlName=\"user_profile_entity\">\n\t\t\t\t\t<mat-option *ngFor=\"let e of entities\" [value]=\"e.name\">{{ e.name }}</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\t\t\t<ng-template #noEntities>\n\t\t\t\t<div class=\"warning\">\n\t\t\t\t\tNo entity found. You need an entity to add custom fields to your users.\n\t\t\t\t</div>\n\t\t\t</ng-template>\n\t\t\n\t\t\t<h3>\n\t\t\t\t<mat-checkbox formControlName=\"email_verification\">Emails enabled</mat-checkbox>\n\t\t\t</h3>\n\n\t\t\t<mat-form-field *ngIf=\"emailAddons && emailAddons.length > 0; else noEmailAddon\">\n\t\t\t\t<mat-select placeholder=\"Select your emailing addon\" formControlName=\"email_addon\">\n\t\t\t\t\t<mat-option *ngFor=\"let e of emailAddons\" [value]=\"e.package\">{{ e.name }}</mat-option>\n\t\t\t\t</mat-select>\n\t\t\t</mat-form-field>\n\n\t\t\t<ng-template #noEmailAddon>\n\t\t\t\t<div class=\"warning\">You need\n\t\t\t\t\t<strong>Sendgrid</strong> or\n\t\t\t\t\t<strong>Mailjet</strong> addon installed\n\t\t\t\t\t<br>to send email from your Materia Application such as a signup email</div>\n\t\t\t</ng-template>\n\t\t</div>\n\t</mat-dialog-content>\n\t<mat-dialog-actions>\n\t\t<button mat-raised-button color=\"primary\" (click)=\"finish()\">Save</button>\n\t\t<button mat-raised-button (click)=\"close()\">Cancel</button>\n\t</mat-dialog-actions>\n</form>",
                    styles: ["mat-form-field{width:100%;margin:0 5px}.mat-dialog-content{margin:0;padding:0 24px}.mat-dialog-actions{padding:12px 24px}h3{margin-top:16px;margin-bottom:8px}.warning{margin:16px 0;padding:8px;border:1px solid #f44336;color:#f44336}"],
                    providers: [FormBuilder]
                },] },
    ];
    /** @nocollapse */
    UserManagementSetupComponent.ctorParameters = function () { return [
        { type: FormBuilder, },
        { type: HttpClient, },
    ]; };
    UserManagementSetupComponent.propDecorators = {
        "app": [{ type: Input },],
        "settings": [{ type: Input },],
        "baseUrl": [{ type: Input },],
        "token": [{ type: Input },],
        "save": [{ type: Output },],
        "cancel": [{ type: Output },],
    };
    UserManagementSetupComponent = tslib_1.__decorate([
        AddonSetup('@materia/users'),
        tslib_1.__metadata("design:paramtypes", [FormBuilder, HttpClient])
    ], UserManagementSetupComponent);
    return UserManagementSetupComponent;
}());
export { UserManagementSetupComponent };
function UserManagementSetupComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    UserManagementSetupComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    UserManagementSetupComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    UserManagementSetupComponent.propDecorators;
    /** @type {?} */
    UserManagementSetupComponent.prototype.app;
    /** @type {?} */
    UserManagementSetupComponent.prototype.settings;
    /** @type {?} */
    UserManagementSetupComponent.prototype.baseUrl;
    /** @type {?} */
    UserManagementSetupComponent.prototype.token;
    /** @type {?} */
    UserManagementSetupComponent.prototype.save;
    /** @type {?} */
    UserManagementSetupComponent.prototype.cancel;
    /** @type {?} */
    UserManagementSetupComponent.prototype.loginForm;
    /** @type {?} */
    UserManagementSetupComponent.prototype.entities;
    /** @type {?} */
    UserManagementSetupComponent.prototype.emailAddons;
    /** @type {?} */
    UserManagementSetupComponent.prototype.fb;
    /** @type {?} */
    UserManagementSetupComponent.prototype.http;
}

//# sourceMappingURL=data:application/json;base64,